{"version":3,"file":"static/js/357.e896077b.chunk.js","mappings":"4JASMA,EAAqB,SAAHC,GAAiF,IAADC,EAAAD,EAA3EE,QAAAA,OAAO,IAAAD,EAAC,WAAK,EAACA,EAACE,EAAQH,EAARG,SAAQC,EAAAJ,EAACK,UAAAA,OAAS,IAAAD,EAAC,GAAEA,EAAAE,EAAAN,EAACO,YAAAA,OAAW,IAAAD,EAAC,SAAQA,EAAAE,EAAAR,EAACS,OAAAA,OAAM,IAAAD,GAAKA,EAC1FE,GAAYC,EAAAA,EAAAA,UA+BlB,OACEC,EAAAA,EAAAA,KAAA,UAAQC,IAAKH,EAAWR,QAASA,EAASY,YAAa,SAAAC,GAAC,OA/BvC,SAACA,GAClB,GAAIN,EAAQ,CACVM,EAAEC,kBACF,IAAMC,EAASC,SAASC,cAAc,QACtCJ,EAAEK,OAAOC,iBAAiB,WAAU,WAClCJ,EAAOK,MAAMC,QAAQ,IACrBN,EAAOI,iBAAiB,iBAAgB,WACtCJ,EAAOO,QACT,GACF,IACAT,EAAEK,OAAOC,iBAAiB,YAAW,WACnCJ,EAAOK,MAAMC,QAAQ,IACrBN,EAAOI,iBAAiB,iBAAgB,WACtCJ,EAAOO,QACT,GACF,IAEAT,EAAEK,OAAOK,YAAYR,GACrB,IAAMS,EAAWC,KAAKC,IAAIb,EAAEK,OAAOS,YAAad,EAAEK,OAAOU,cACnDC,EAASL,EAAW,EAC1BT,EAAOK,MAAMU,MAAQf,EAAOK,MAAMW,OAAM,GAAAC,OAAMR,EAAQ,MACtDT,EAAOK,MAAMa,KAAI,GAAAD,OAAMnB,EAAEqB,QAAUL,EAASrB,EAAU2B,QAAQC,wBAAwBH,KAAI,MAC1FlB,EAAOK,MAAMiB,IAAG,GAAAL,OAAMnB,EAAEyB,QAAUT,EAAQrB,EAAU2B,QAAQC,wBAAwBC,IAAG,MACvFtB,EAAOwB,UAAUC,IAAI,UACrBzB,EAAOwB,UAAUC,IAAInC,EACvB,CAGF,CAG4DoC,CAAa5B,EAAE,EAAGV,UAAS,WAAA6B,OAAa7B,GAAYF,UAACS,EAAAA,EAAAA,KAAA,QAAMP,UAAU,UAASF,SAAEA,KAE9I,EAEA,GAAeyC,EAAAA,EAAAA,MAAK7C,E,wFCHpB,EAnCmB,SAAHC,GAAiE,IAA5D6C,EAAK7C,EAAL6C,MAAMC,EAAQ9C,EAAR8C,SAAQC,EAAA/C,EAACgD,YAAAA,OAAW,IAAAD,EAAC,GAAEA,EAAA3C,EAAAJ,EAACK,UAAAA,OAAS,IAAAD,EAAC,GAAEA,EACzD6C,GAActC,EAAAA,EAAAA,QAA4B,MAChDuC,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAmBpB,OACExC,EAAAA,EAAAA,KAAA,YACIC,IAAKoC,EACLO,KAAM,EACNC,QAtBY,WACZF,GAAS,EAEb,EAoBIG,OAjBW,WACVH,GAAS,EACd,EAgBIlD,UAAS,cAAA6B,OAAgB7B,EAAS,KAAA6B,OAAIoB,EAAQ,SAAW,IACzDT,MAAOA,EACPc,SAfU,SAAC5C,GACfkC,EAAYZ,UAAYY,EAAYZ,QAAQf,MAAMW,OAAS,QAC3DgB,EAAYZ,UAAYY,EAAYZ,QAAQf,MAAMW,OAAM,GAAAC,OAAMnB,EAAEK,OAAOwC,aAAY,OACnFd,EAAS/B,EAAEK,OAAOyB,MACnB,EAYKG,YAAaA,GAGrB,C,2ECzBA,EAPmC,SAAHhD,GAA6C,IAAxCG,EAAQH,EAARG,SAAQ0D,EAAA7D,EAAC8D,gBAAAA,OAAe,IAAAD,EAAC,SAAQA,EACpE,OACEjD,EAAAA,EAAAA,KAAA,OAAKP,UAAS,cAAA6B,OAAgB4B,GAAkB3D,SAAEA,GAGtD,C,oICVa4D,EAAO,eAAA/D,GAAAgE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAMC,GAAQ,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACXC,EAAAA,EAAMC,KAAK,OAAOR,GAAK,OAAjC,OAAiCC,EAAAG,EAAAK,KAArCP,EAAID,EAAJC,KAAIE,EAAAM,OAAA,SACJR,GAAI,wBAAAE,EAAAO,OAAA,GAAAZ,EAAA,KACd,gBAHmBa,GAAA,OAAAhF,EAAAiF,MAAA,KAAAC,UAAA,KAIPC,EAAU,eAAAC,GAAApB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAmB,IAAA,IAAAC,EAAAhB,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACAC,EAAAA,EAAMC,KAAK,eAAc,OAAnC,OAAmCU,EAAAC,EAAAV,KAAvCP,EAAIgB,EAAJhB,KAAIiB,EAAAT,OAAA,SACJR,GAAI,wBAAAiB,EAAAR,OAAA,GAAAM,EAAA,KACd,kBAHsB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAKVM,EAAU,eAAAC,GAAAzB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAwB,EAAMtB,GAAQ,IAAAuB,EAAArB,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EACdC,EAAAA,EAAMC,KAAK,kBAAkBR,GAAK,OAA5C,OAA4CuB,EAAAC,EAAAf,KAAhDP,EAAIqB,EAAJrB,KAAIsB,EAAAd,OAAA,SACJR,GAAI,wBAAAsB,EAAAb,OAAA,GAAAW,EAAA,KACd,gBAHsBG,GAAA,OAAAJ,EAAAR,MAAA,KAAAC,UAAA,K,6BCqHvB,EApHsC,SAAHlF,GAA8F,IAAD8F,EAAA9F,EAAxF+F,WAAAA,OAAU,IAAAD,EAAC,IAAIA,EAAC3F,EAAQH,EAARG,SAA0C6F,GAAlChG,EAACiG,QAAiCjG,EAAnBkG,oBAAmBlG,EAACmG,gBAAAA,OAAc,IAAAH,EAAC,SAAQA,EACvH9C,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCkD,EAAMhD,EAAA,GAAEiD,EAASjD,EAAA,GACxBkD,GAA8BnD,EAAAA,EAAAA,UAAsB,MAAKoD,GAAAlD,EAAAA,EAAAA,GAAAiD,EAAA,GACnDE,GADQD,EAAA,GAAYA,EAAA,IACV5F,EAAAA,EAAAA,WAIX8F,IAHY9F,EAAAA,EAAAA,WACIA,EAAAA,EAAAA,WACDA,EAAAA,EAAAA,QAAY,KACfA,EAAAA,EAAAA,WAKV+F,GAAMC,EAAAA,EAAAA,cACV,WACE,IAAM9E,EAAc+E,OAAOC,WAI3BR,IAHExE,GAAekE,GAQnB,GACA,KAIFe,EAAAA,EAAAA,YAAU,WACR,IAAMjF,EAAc+E,OAAOC,WAU3B,OAPER,IADExE,GAAekE,IAOnBa,OAAOvF,iBAAiB,SAASqF,GAC1B,WACLE,OAAOG,oBAAoB,SAASL,EACtC,CAIF,GAAG,IAEJ,IAAAM,GAA8B7D,EAAAA,EAAAA,UAAc,MAAK8D,GAAA5D,EAAAA,EAAAA,GAAA2D,EAAA,GACjDE,GADcD,EAAA,GAAYA,EAAA,IACM9D,EAAAA,EAAAA,UAAc,OAAKgE,GAAA9D,EAAAA,EAAAA,GAAA6D,EAAA,GAApCC,EAAA,GAAaA,EAAA,IAE3BL,EAAAA,EAAAA,YAAU,WAGR,OAFAN,EAAQnE,QAAQf,MAAMW,OAAS,MAC/B2E,OAAOvF,iBAAiB,SAAS+F,GAC1B,WACLR,OAAOG,oBAAoB,SAASK,EACtC,CAEF,GAAG,IAEH,IAAMA,EAAK,WAIX,GAEAN,EAAAA,EAAAA,YAAU,WAEJV,GAIHI,EAAQnE,QAAQf,MAAMW,OAAM,GAAAC,OAAKsE,EAAQnE,QAAQuB,aAAY,MAC7DyD,YAAW,WACVb,EAAQnE,QAAQf,MAAMW,OAAQ,MAC/B,GAAG,OAGFqF,QAAQC,IAAI,SAASnB,GAErBI,EAAQnE,QAAQf,MAAMW,OAAM,GAAAC,OAAKsE,EAAQnE,QAAQuB,aAAY,MAC7DyD,YAAW,WACTb,EAAQnE,QAAQf,MAAMW,OAAS,KACjC,GAAG,GAKN,GAAG,CAACmE,IAeP,OACExF,EAAAA,EAAAA,KAAA,OAAKC,IAAK4F,EAAWpG,UAAS,gBAAA6B,OAAkBiE,GAAiBhG,UAC/DqH,EAAAA,EAAAA,MAAA,OAAKnH,UAAU,0BAA0BoH,gBARpC,WAKX,EAGmEtH,SAAA,EAC5DS,EAAAA,EAAAA,KAAA,OAAKV,QAAS,kBAAImG,GAAU,SAAC5B,GAAI,OAAIA,CAAI,GAAC,EAAGpE,UAAW+F,EAAS,uDAAyD,wCAAwCjG,SAAEA,EAAS,MAC7KS,EAAAA,EAAAA,KAAA,OAAKV,QAAS,WAAmB,EAAEW,IAAK2F,EAASnG,UAAU,qBAAoBF,UAC/ES,EAAAA,EAAAA,KAAA,OAAKP,UAAU,wBAAuBF,SACrCA,EAAS,WAMf,E,kDC7CF,EArEoB,WAChB,IAAA+C,GAA4BC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CwE,EAAMtE,EAAA,GAAEuE,EAASvE,EAAA,GACxBkD,GAAwBnD,EAAAA,EAAAA,UAAS,IAAGoD,GAAAlD,EAAAA,EAAAA,GAAAiD,EAAA,GAA7BsB,EAAIrB,EAAA,GAAEsB,EAAOtB,EAAA,GACpBuB,EAAoCC,EAAAA,EAAUC,QAAvCC,EAASH,EAATG,UAAUC,EAAeJ,EAAfI,gBACXC,GAAWC,EAAAA,EAAAA,MAGjBtB,EAAAA,EAAAA,YAAU,WACN3B,IAAakD,MAAK,SAAA/D,GACduD,EAAQvD,GACRqD,GAAU,EACd,GACJ,GAAG,IASL,OACE/G,EAAAA,EAAAA,KAAA,OAAKP,UAAU,uBAAsBF,SAEhCuH,EAASE,EAAKU,KAAI,SAACC,GAEhB,IAAMC,GAAOC,EAAAA,EAAAA,IAAQF,EAAGC,KAAM,cAAe,CAAEE,OAAOC,EAAAA,IACtD,OACAnB,EAAAA,EAAAA,MAAA,OAAoBnH,UAAU,0BAAyBF,SAAA,EACvDS,EAAAA,EAAAA,KAAA,OAAKP,UAAU,kBAAiBF,UAChCS,EAAAA,EAAAA,KAAA,OAAKgI,IAAG,GAAA1G,OAAK2G,EAAAA,GAAO,UAAA3G,OAASqG,EAAGO,OAASC,IAAI,QAE7CnI,EAAAA,EAAAA,KAAA,OAAKP,UAAU,iBAAgBF,SAAEqI,KACjC5H,EAAAA,EAAAA,KAAA,OAAKP,UAAU,iBAAgBF,SAAEoI,EAAGS,SACpCpI,EAAAA,EAAAA,KAAA,OAAKP,UAAU,iBAAgBF,SAAEoI,EAAGU,QACpCrI,EAAAA,EAAAA,KAAA,OAAKP,UAAU,mBAAkBF,UACjCS,EAAAA,EAAAA,KAACb,EAAAA,EAAO,CAACG,QAAS,kBAtBJgJ,EAsBuBX,EAAGY,IArB5ChB,EAASD,GAAgB,SACzBC,EAASF,EAAUiB,IAFF,IAACA,CAsB8B,EAAG7I,UAAU,aAAYF,SAAC,4HAGtES,EAAAA,EAAAA,KAAA,OAAKP,UAAU,mCAAkCF,UACjDqH,EAAAA,EAAAA,MAAC4B,EAAY,CAACjD,eAAe,OAAMhG,SAAA,EAC/BqH,EAAAA,EAAAA,MAAA,OAAKnH,UAAU,uBAAsBF,SAAA,CAAEoI,EAAGc,SAASC,OAAO,gFAC1D1I,EAAAA,EAAAA,KAAA,OAAKP,UAAU,sBAAqBF,SAClCoI,EAAGc,SAASf,KAAI,SAACiB,GAAO,OACvB/B,EAAAA,EAAAA,MAAA,OAAoBnH,UAAU,sBAAqBF,SAAA,EACnDqH,EAAAA,EAAAA,MAAA,OAAKnH,UAAU,sBAAqBF,SAAA,CAAEoJ,EAAIC,KAAK,IAAED,EAAIE,YACrD7I,EAAAA,EAAAA,KAAA,OAAKP,UAAU,sBAAqBF,SAAEoJ,EAAIN,SAFhCM,EAAIN,KAGZ,aAnBCV,EAAGS,MA8BjB,KAIJpI,EAAAA,EAAAA,KAAC8I,EAAAA,EAAM,KAKX,ECnEA,EATiB,WACf,OACE9I,EAAAA,EAAAA,KAAA,OAAKP,UAAU,aAAYF,UACvBS,EAAAA,EAAAA,KAAC+I,EAAW,KAIpB,E,wCC0DA,EAjEgB,WAEZ,IAAAzG,GAAkCC,EAAAA,EAAAA,UAAc,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9C0G,EAASxG,EAAA,GAAEyG,EAAYzG,EAAA,GAC9BkD,GAAgCnD,EAAAA,EAAAA,UAAwB,IAAGoD,GAAAlD,EAAAA,EAAAA,GAAAiD,EAAA,GAApDwD,EAAQvD,EAAA,GAAEwD,EAAWxD,EAAA,GAC5BS,GAA8B7D,EAAAA,EAAAA,WAAkB,GAAM8D,GAAA5D,EAAAA,EAAAA,GAAA2D,EAAA,GAA/CgD,EAAO/C,EAAA,GAAEgD,EAAUhD,EAAA,GAC1BC,GAAwB/D,EAAAA,EAAAA,UAAc,MAAKgE,GAAA9D,EAAAA,EAAAA,GAAA6D,EAAA,GAApCgD,EAAI/C,EAAA,GAAEgD,EAAOhD,EAAA,GACpBiD,GAAwBjH,EAAAA,EAAAA,UAAiB,IAAGkH,GAAAhH,EAAAA,EAAAA,GAAA+G,EAAA,GAArCnB,EAAIoB,EAAA,GAAEC,EAAOD,EAAA,GACpBE,GAA0BpH,EAAAA,EAAAA,UAAiB,IAAGqH,GAAAnH,EAAAA,EAAAA,GAAAkH,EAAA,GAAvCvB,EAAKwB,EAAA,GAAEC,EAAQD,EAAA,GAEhBE,GAAWC,EAAAA,EAAAA,MAqDnB,MAAO,CAACC,SAlDW,SAAC7J,GACd,IAAI8J,EAAS,IAAIC,WAEjBD,EAAOE,cAAchK,EAAEK,OAAO4J,MAAM,IACpCb,EAAQpJ,EAAEK,OAAO4J,MAAM,IACvBH,EAAOI,UAAY,WACfpB,EAAagB,EAAOK,QACpBnB,EAAYhJ,EAAEK,OAAO4J,MAAM,GAAGxB,MAC9BS,GAAW,EAEf,CAEJ,EAsCekB,UAnCG,WACd7D,QAAQC,IAAI,QACZ0C,GAAW,GACXJ,EAAa,MACbE,EAAY,MACZI,EAAQ,KAGX,EA2BwBiB,SAxBP,WACd,GAAc,KAAVpC,GAAyB,KAATC,GAAuB,OAARiB,EAAc,CAC7C,IAAMmB,EAAY,IAAIC,SACtBD,EAAUE,OAAO,QAAQvC,GACzBqC,EAAUE,OAAO,OAAOtC,GACxBoC,EAAUE,OAAO,QAAQrB,GAC1BnG,EAAQsH,GAAWhD,MAAK,SAAA/D,GACvBmG,EAAS,IACTH,EAAQ,IACRH,EAAQ,MACRN,EAAa,MACbI,GAAW,GACXS,EAASc,EAAAA,IACT5E,OAAO6E,SAASC,QAEjB,GACH,MACIC,MAAM,gHAId,EAGkC/B,UAAAA,EAAUE,SAAAA,EAASE,QAAAA,EAAQf,KAAAA,EAAKD,MAAAA,EAAMsB,QAAAA,EAAQG,SAAAA,EACpF,E,UCdA,EA5CqB,WAEjB,IAAOmB,GAAaC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAEA,EAAMC,QAAQnE,IAAI,IAArDgE,UACAI,EAAgBjE,EAAAA,EAAUC,QAA1BgE,aACD7D,GAAWC,EAAAA,EAAAA,KACX6D,GAAWtL,EAAAA,EAAAA,QAAyB,MAC1CuL,EAA6FC,IAAtFnD,EAAKkD,EAALlD,MAAMC,EAAIiD,EAAJjD,KAAK2B,EAAQsB,EAARtB,SAASd,EAAQoC,EAARpC,SAASE,EAAOkC,EAAPlC,QAAQJ,EAASsC,EAATtC,UAAUuB,EAASe,EAATf,UAAUC,EAAQc,EAARd,SAASd,EAAO4B,EAAP5B,QAAQG,EAAQyB,EAARzB,SAOnF,OACE7J,EAAAA,EAAAA,KAACwL,EAAAA,EAAK,CAAChG,OAAQwF,EAAWS,UAAW,SAACtL,GAAK,OAAGoH,EAAS6D,EAAajL,GAAG,EAAEuL,WAAW,UAASnM,UACzFqH,EAAAA,EAAAA,MAAA,OAAKnH,UAAU,eAAcF,SAAA,EACzBS,EAAAA,EAAAA,KAAA,OAAKP,UAAU,oBAAmBF,UAC9BS,EAAAA,EAAAA,KAAC2L,EAAAA,EAAK,CAAC1J,MAAOmG,EAAOwD,OAAQ/B,EAAUgC,WAAW,kBAAkBzJ,YAAY,kEAEpFpC,EAAAA,EAAAA,KAAA,OAAKP,UAAU,qBAAoBF,UAC/BS,EAAAA,EAAAA,KAAC8L,EAAAA,EAAU,CAAC7J,MAAOoG,EAAMnG,SAAU,SAAC/B,GAAC,OAAGuJ,EAAQvJ,EAAE,EAAEiC,YAAY,iCAAQ3C,UAAU,8BAEtFmH,EAAAA,EAAAA,MAAA,OAAKnH,UAAU,uBAAsBF,SAAA,EACjCqH,EAAAA,EAAAA,MAAA,OAAMnH,UAAU,sBAAqBF,SAAA,EACjCS,EAAAA,EAAAA,KAAA,SAAOC,IAAKoL,EAAWtI,SAAUiH,EAAU+B,KAAK,OAAOtM,UAAU,wBACrEO,EAAAA,EAAAA,KAAA,OAAMP,UAAU,kBAAiBF,UAC7BqH,EAAAA,EAAAA,MAACzH,EAAAA,EAAO,CAACG,QAjBL,WAAK,IAAD0M,EACJ,QAAhBA,EAAAX,EAAS5J,eAAO,IAAAuK,GAAhBA,EAAkBC,OACrB,EAeiDxM,UAAU,aAAYF,SAAA,CAAE2J,EAAQ,GAAA5H,OAAM4H,GAAa,gHAAsB,aAG/GlJ,EAAAA,EAAAA,KAAA,OAAKP,UAAW2J,EAAU,mCAAoC,4BAA4B7J,UAC1FqH,EAAAA,EAAAA,MAAA,OAAKnH,UAAU,sBAAqBF,SAAA,EACpCS,EAAAA,EAAAA,KAAA,QAAMV,QAASiL,EAAW9K,UAAU,6BAChCO,EAAAA,EAAAA,KAAA,OAAKgI,IAAKgB,EAAWb,IAAI,cAIjCnI,EAAAA,EAAAA,KAAA,OAAKP,UAAU,uBAAsBF,UACjCS,EAAAA,EAAAA,KAACb,EAAAA,EAAO,CAAEG,QAASkL,EAAU/K,UAAU,aAAYF,SAAC,iEAKpE,ECrBA,EAxBmB,WACf,IAAO2M,GAAQjB,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAEA,EAAMC,QAAQgB,OAAO,IAAnDD,KACAE,GAAUnB,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAEA,EAAMC,QAAQnE,IAAI,IAAlDoF,OACP9J,GAAwBC,EAAAA,EAAAA,UAAiB2J,EAAKtD,MAAKpG,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CsG,EAAIpG,EAAA,GAAE6J,EAAO7J,EAAA,GACpBkD,GAA8BnD,EAAAA,EAAAA,UAAiB2J,EAAKrD,SAAQlD,GAAAlD,EAAAA,EAAAA,GAAAiD,EAAA,GAArDmD,EAAOlD,EAAA,GAAE2G,EAAU3G,EAAA,GAC1BS,GAAsC7D,EAAAA,EAAAA,UAAiB,IAAG8D,GAAA5D,EAAAA,EAAAA,GAAA2D,EAAA,GAAnDmG,EAAWlG,EAAA,GAAEmG,EAAcnG,EAAA,GAC5ByD,GAAWC,EAAAA,EAAAA,MAenB,MAAO,CAACsC,QAAAA,EAAQC,WAAAA,EAAWE,eAAAA,EAAeC,iBAZf,WACR,KAAT7D,GAA2B,KAAZC,GAAiC,KAAhB0D,EACrC3H,EAAW,CAACgE,KAAAA,EAAKC,QAAAA,EAAQR,KAAKkE,EAAYvF,KAAKoF,IAAS3E,MAAK,SAAA/D,GAC5DoG,EAASc,EAAAA,IACT5E,OAAO6E,SAASC,QACjB,IAECC,MAAM,gHAEd,EAG6DlC,QAAAA,EAAQ0D,YAAAA,EAAY3D,KAAAA,EACjF,ECSA,EA7BqB,WAEb,IAAO8D,GAAgBzB,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAEA,EAAMC,QAAQnE,IAAI,IAAxD0F,aACApF,EAAmBH,EAAAA,EAAUC,QAA7BE,gBACDC,GAAWC,EAAAA,EAAAA,KAEzBmF,EAAqFC,IAA9EH,EAAgBE,EAAhBF,iBAAiBJ,EAAOM,EAAPN,QAAQC,EAAUK,EAAVL,WAAWE,EAAcG,EAAdH,eAAe3D,EAAO8D,EAAP9D,QAAQ0D,EAAWI,EAAXJ,YAAY3D,EAAI+D,EAAJ/D,KAG5E,OACE5I,EAAAA,EAAAA,KAACwL,EAAAA,EAAK,CAAChG,OAAQkH,EAAcjB,UAAW,SAACtL,GAAK,OAAGoH,EAASD,EAAgBnH,GAAG,EAAEuL,WAAW,UAASnM,UACnGqH,EAAAA,EAAAA,MAAA,OAAKnH,UAAU,eAAcF,SAAA,EACzBqH,EAAAA,EAAAA,MAAA,OAAKnH,UAAU,oBAAmBF,SAAA,EAC9BS,EAAAA,EAAAA,KAAC2L,EAAAA,EAAK,CAAC1J,MAAO2G,EAAMgD,OAAQS,EAASR,WAAW,kBAAkBzJ,YAAY,2BAC9EpC,EAAAA,EAAAA,KAAC2L,EAAAA,EAAK,CAAC1J,MAAO4G,EAAS+C,OAAQU,EAAYT,WAAW,kBAAkBzJ,YAAY,sDAExFpC,EAAAA,EAAAA,KAAA,OAAKP,UAAU,qBAAoBF,UAC/BS,EAAAA,EAAAA,KAAA,YAAUiC,MAAOsK,EAAaxJ,SAAU,SAAC5C,GAAC,OAAGqM,EAAerM,EAAEK,OAAOyB,MAAM,EAAEG,YAAY,iCAAQ3C,UAAU,yBAAwBF,SAAEgN,OAEzIvM,EAAAA,EAAAA,KAAA,OAAKP,UAAU,uBAAsBF,UACrCS,EAAAA,EAAAA,KAACb,EAAAA,EAAO,CAAEG,QAASmN,EAAkBhN,UAAU,aAAYF,SAAC,iEAOpE,E,SCPA,EApBiB,WAEb,IAAO6L,EAAgBjE,EAAAA,EAAUC,QAA1BgE,aACD7D,GAAWC,EAAAA,EAAAA,KAGnB,OACEZ,EAAAA,EAAAA,MAAA,OAAKnH,UAAU,OAAMF,SAAA,EACjBqH,EAAAA,EAAAA,MAAA,OAAKnH,UAAU,kBAAiBF,SAAA,EAC5BS,EAAAA,EAAAA,KAAC6M,EAAAA,EAAU,CAAC3J,gBAAgB,OAAM3D,SAAC,8IACnCqH,EAAAA,EAAAA,MAAA,OAAKnH,UAAU,cAAaF,SAAA,EAACS,EAAAA,EAAAA,KAAA,QAAAT,SAAM,+CAAc,wDACjDS,EAAAA,EAAAA,KAAA,OAAKP,UAAU,eAAcF,UAACS,EAAAA,EAAAA,KAACb,EAAAA,EAAO,CAACG,QAAS,kBAAIiI,EAAS6D,GAAa,GAAM,EAAE3L,UAAU,aAAYF,SAAC,mGACzGS,EAAAA,EAAAA,KAAC8M,EAAQ,QAEb9M,EAAAA,EAAAA,KAAC+M,EAAY,KACb/M,EAAAA,EAAAA,KAACgN,EAAY,MAGrB,EChBA,EARa,WACX,OACEhN,EAAAA,EAAAA,KAACiN,EAAAA,EAAM,CAAA1N,UACHS,EAAAA,EAAAA,KAACkN,EAAQ,KAGjB,C","sources":["components/UI/button2/Button2.tsx","components/UI/myTextArea/MyTextArea.tsx","components/UI/navigation/Navigation.tsx","https/newsApi.ts","components/UI/accordionOne/AccordionOne.tsx","components/news/bodyNews/elementNews/ElementNews.tsx","components/news/bodyNews/BodyNews.tsx","hooks/useNews.tsx","components/news/raitingModal/NewsModal.tsx","hooks/useComment.tsx","components/news/commentModal/CommentModal.tsx","components/news/MainNews.tsx","pages/News.tsx"],"sourcesContent":["import React, { FC, useRef,memo } from 'react'\r\nimport './button2.scss'\r\ninterface button{\r\n   children?:any\r\n   className?:string\r\n   rippleClass?:string\r\n   ripple?:boolean\r\n   onClick?:(e:any)=>void\r\n}\r\nconst Button2:FC<button> = ({onClick=()=>{},children,className='',rippleClass='origin',ripple=true}) => {\r\n  const buttonRef = useRef<any>()\r\n  const rippleEffect=(e:any)=>{\r\n    if (ripple) {\r\n      e.stopPropagation()\r\n      const circle = document.createElement(\"span\");\r\n      e.target.addEventListener(\"mouseup\",()=>{\r\n        circle.style.opacity='0'\r\n        circle.addEventListener(\"transitionend\",()=>{\r\n          circle.remove()\r\n        })\r\n      })\r\n      e.target.addEventListener(\"mouseout\",()=>{\r\n        circle.style.opacity='0'\r\n        circle.addEventListener(\"transitionend\",()=>{\r\n          circle.remove()\r\n        })\r\n      })\r\n\r\n      e.target.appendChild(circle);\r\n      const diameter = Math.max(e.target.clientWidth, e.target.clientHeight);\r\n      const radius = diameter / 2;\r\n      circle.style.width = circle.style.height = `${diameter}px`;\r\n      circle.style.left = `${e.clientX - radius - buttonRef.current.getBoundingClientRect().left}px`;\r\n      circle.style.top = `${e.clientY - radius- buttonRef.current.getBoundingClientRect().top }px`;\r\n      circle.classList.add(`ripple`); \r\n      circle.classList.add(rippleClass); \r\n    }\r\n      \r\n\r\n  }\r\n\r\n  return (\r\n    <button ref={buttonRef} onClick={onClick} onMouseDown={e=>rippleEffect(e)}  className={`Button2 ${className}`}><span className='content'>{children}</span></button>\r\n  )\r\n}\r\n\r\nexport default memo(Button2)","import React, { useRef, useState } from 'react'\r\nimport './myTextArea.scss'\r\ntype MyTextArea = {\r\n    value:string\r\n    setValue:(e:string)=>void\r\n    placeholder?:string | undefined\r\n    className?:string\r\n}\r\nconst MyTextArea = ({value,setValue,placeholder='',className=''}:MyTextArea) => {\r\nconst textAreaRef = useRef<HTMLTextAreaElement>(null)\r\nconst [focus, setFocus] = useState(false)\r\n    const onFocus = ()=>{\r\n        setFocus(true)\r\n      \r\n    }\r\n\r\n\r\n    const onBlur = ()=>{\r\n         setFocus(false)\r\n    }\r\n\r\n    \r\n   const change = (e:any)=>{\r\n    textAreaRef.current && (textAreaRef.current.style.height = \"auto\")\r\n    textAreaRef.current && (textAreaRef.current.style.height = `${e.target.scrollHeight}px`)\r\n    setValue(e.target.value)\r\n   }\r\n\r\n\r\n  return (\r\n    <textarea \r\n        ref={textAreaRef}  \r\n        rows={1} \r\n        onFocus={onFocus} \r\n        onBlur={onBlur} \r\n        className={`MyTextArea ${className} ${focus ? 'active' : ''}`} \r\n        value={value}  \r\n        onChange={change} \r\n        placeholder={placeholder}>\r\n    </textarea>\r\n  )\r\n}\r\n\r\nexport default MyTextArea","import React, { Children, FC, ReactNode } from 'react'\r\nimport './navigation.scss'\r\ninterface FooterProps{  \r\n    name?:string,\r\n    children?:any\r\n    changeName?:boolean\r\n    lock?:boolean\r\n    navigationClass?:string\r\n  }\r\nconst Navigation:FC<FooterProps> = ({children,navigationClass='origin'}) => {\r\n  return (\r\n    <div className={`Navigation ${navigationClass}`}>{children}</div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Navigation","import axios from \"axios\"\r\nimport { $authHost, $host } from \".\"\r\nimport { API_URL } from \"../utils/config\"\r\n\r\nexport const addNews= async(info:any)=>{\r\n    const {data} = await $host.post('news',info)\r\n    return data\r\n}\r\nexport const getAllNews= async()=>{\r\n    const {data} = await $host.post('news/getAll')\r\n    return data\r\n}\r\n\r\nexport const addComment= async(info:any)=>{\r\n    const {data} = await $host.post('news/addComment',info)\r\n    return data\r\n}\r\n","import React, {useCallback, useEffect, useMemo, useRef, useState,FC,ReactNode,cloneElement,ReactElement } from 'react'\r\nimport './accordionOne.scss'\r\n\r\ninterface FooterProps{  \r\n  breakpoint?:number,\r\n  children?:any,\r\n  oneOpen?:boolean,\r\n  setVisibleAccordion?:(a:boolean)=>void,\r\n  accordionClass?:string\r\n}\r\n\r\n\r\n\r\n\r\nconst AccordionOne: FC<FooterProps> = ({breakpoint=8000,children,oneOpen=false,setVisibleAccordion,accordionClass='origin'}) => {\r\n   const [active, setactive] = useState(false)\r\n   const [visible, setVisible] = useState<number|null>(null)\r\n   const itemRef = useRef<any>()\r\n   const childRef = useRef<any>()\r\n   const itemWidthRef = useRef()\r\n   const footerItems = useRef<any>([])\r\n  const accordRef = useRef<any>()\r\n//при нажатии на один аккордион другой закрывается\r\n\r\n\r\n//закрытие или открытие всех аккордионов при брейкпоинте\r\n    const ff2 = useCallback(\r\n      () => {\r\n        const clientWidth = window.innerWidth\r\n      if (clientWidth <= breakpoint) {\r\n       \r\n        \r\n        setactive(false)\r\n      }else{\r\n        setactive(true)\r\n      }\r\n      \r\n      },\r\n      [],\r\n    )\r\n    \r\n//определяет открыты или закрыты все аккордионы в начале\r\n    useEffect(() => {\r\n      const clientWidth = window.innerWidth\r\n      \r\n      if (clientWidth <= breakpoint) {\r\n        setactive(false)\r\n      }else{\r\n        setactive(true)\r\n      }\r\n\r\n\r\n      window.addEventListener('resize',ff2)\r\n      return () => {\r\n        window.removeEventListener('resize',ff2)\r\n      }\r\n\r\n\r\n     \r\n    }, [])\r\n\r\n   const [counter, setcounter] = useState<any>(null)\r\n   const [counter2, setcounter2] = useState<any>(null)\r\n  \r\n    useEffect(() => {\r\n      itemRef.current.style.height = '0px'\r\n      window.addEventListener('resize',gg)\r\n      return () => {\r\n        window.removeEventListener('resize',gg)\r\n      }\r\n  \r\n    }, [])\r\n  \r\n    const gg = ()=>{\r\n \r\n      \r\n  \r\n    }\r\n    \r\n    useEffect(() => {\r\n      //setVisibleAccordion(false)\r\n      if (active) {\r\n\r\n\r\n       //itemRef.current.style.boxSizing = 'content-box'\r\n       itemRef.current.style.height =`${itemRef.current.scrollHeight}px`\r\n       setTimeout(() => {\r\n        itemRef.current.style.height= 'auto'\r\n       }, 300);\r\n      }else{\r\n    \r\n        console.log('777777',active);\r\n        \r\n        itemRef.current.style.height =`${itemRef.current.scrollHeight}px`\r\n        setTimeout(() => {\r\n          itemRef.current.style.height = '0px'\r\n        }, 5);\r\n\r\n      }\r\n  \r\n       \r\n     }, [active])\r\n\r\n\r\n     const changeOnClick = ()=>{   \r\n    \r\n      //itemRef.current.style.height= 'auto'\r\n      //itemRef.current.style.boxSizing = 'border-box'\r\n      //itemRef.current.style.height =`${itemRef.current.scrollHeight}px`\r\n     }\r\nconst cc = ()=>{\r\n  if (active) {\r\n    \r\n  }\r\n  \r\n}\r\n  return (\r\n    <div ref={accordRef} className={`AccordionOne ${accordionClass}`}>\r\n      <div className='AccordionOne__bodyCover' onTransitionEnd={cc}>\r\n       <div onClick={()=>setactive((prev)=>!prev)}  className={active ? \"AccordionOne__button  active _icon-arrow-next active\" : \"AccordionOne__button _icon-arrow-next\"}>{children[0]}</div>\r\n       <div onClick={()=>changeOnClick()} ref={itemRef} className=\"AccordionOne__body\"> \r\n       <div className=\"AccordionOne__bodytwo\">\r\n       {children[1]}\r\n       </div>\r\n       </div>\r\n      </div>\r\n      </div>\r\n  )\r\n  }\r\n\r\nexport default AccordionOne","import React,{useState,useEffect} from 'react'\r\nimport { getAllNews } from '../../../../https/newsApi'\r\nimport { newsSlice } from '../../../../store2/reducers/NewsSlice'\r\nimport Button from '../../../UI/button/Button'\r\nimport { API_URL } from '../../../../utils/config'\r\nimport AccordionOne from '../../../UI/accordionOne/AccordionOne'\r\nimport Loader from '../../../UI/loader/Loader'\r\nimport { useAppDispatch } from '../../../../hooks/reduxHooks'\r\nimport './elementNews.scss'\r\nimport format from 'date-fns/format'\r\nimport { ru } from 'date-fns/locale'\r\nimport Button2 from '../../../UI/button2/Button2'\r\n\r\n\r\nconst ElementNews = () => {\r\n    const [loader, setloader] = useState<boolean>(false)\r\n    const [news, setnews] = useState([])\r\n    const {setNewsId,setModalCooment} = newsSlice.actions\r\n    const dispatch = useAppDispatch()\r\n   \r\n    \r\n    useEffect(() => {\r\n        getAllNews().then(data=>{\r\n            setnews(data)\r\n            setloader(true)\r\n        })\r\n    }, [])\r\n\r\n    const modalCommentId=(id:any)=>{\r\n        dispatch(setModalCooment(true))\r\n        dispatch(setNewsId(id))\r\n        \r\n     }\r\n\r\n\r\n  return (\r\n    <div className=\"News__main main-news\">\r\n\r\n        {loader ? news.map((el:any)=>\r\n        {\r\n            const date = format(+el.date, 'd MMMM yyyy', { locale:ru })\r\n            return(    \r\n            <div key={el.title} className=\"main-news__new new-main\">\r\n            <div className=\"new-main__image\">\r\n            <img src={`${API_URL}/news/${el.image}`} alt=\"\"/>\r\n            </div>\r\n            <div className=\"new-main__date\">{date}</div>\r\n            <div className=\"new-main__name\">{el.title}</div>\r\n            <div className=\"new-main__text\">{el.text}</div>\r\n            <div className=\"new-main__button\">\r\n            <Button2 onClick={()=>modalCommentId(el._id)}  className='buttonCart'>Добавить комментарий </Button2>\r\n            </div>\r\n            \r\n            <div className=\"new-main__cooments comments-main\">\r\n            <AccordionOne accordionClass='news'>\r\n                <div className=\"comments-main__value\">{el.comments.length} комментариев</div>\r\n                <div className=\"comments-main__body\">\r\n                 {el.comments.map((com:any)=>\r\n                   <div key={com.text} className=\"comments-main__item\">\r\n                   <div className=\"comments-main__name\">{com.name} {com.sername}</div>\r\n                   <div className=\"comments-main__text\">{com.text}</div>\r\n               </div>\r\n               )}\r\n                  \r\n                \r\n                </div>\r\n                </AccordionOne>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>)\r\n        }\r\n       \r\n       )\r\n    :\r\n    <Loader/>}\r\n     \r\n  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ElementNews","import React from 'react'\r\nimport MainNews from '../MainNews'\r\nimport RightNews from './rightNews/RightNews'\r\nimport ElementNews from './elementNews/ElementNews'\r\n\r\nconst BodyNews = () => {\r\n  return (\r\n    <div className=\"News__body\">\r\n        <ElementNews/>\r\n  \r\n</div>\r\n  )\r\n}\r\n\r\nexport default BodyNews","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { addNews } from '../https/newsApi'\r\nimport { HOME_ROUTE } from '../app/config/routs'\r\n\r\nconst useNews = () => {\r\n\r\n    const [fileImage, setFileImage] = useState<any>(null)\r\n    const [fileName, setFileName] = useState<string | null>('')\r\n    const [fileDiv, setFileDiv] = useState<boolean>(false)\r\n    const [file, setfile] = useState<any>(null)\r\n    const [text, settext] = useState<string>('')\r\n    const [title, settitle] = useState<string>('')\r\n\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const fileload = (e:any)=>{\r\n        let reader = new FileReader();\r\n       \r\n        reader.readAsDataURL(e.target.files[0]);\r\n        setfile(e.target.files[0])\r\n        reader.onloadend = ()=>{\r\n            setFileImage(reader.result)\r\n            setFileName(e.target.files[0].name)\r\n            setFileDiv(true)\r\n               \r\n        }\r\n\r\n    }\r\n\r\n\r\n    const clearFile = ()=>{\r\n        console.log('6666');\r\n        setFileDiv(false)\r\n        setFileImage(null)\r\n        setFileName(null)\r\n        setfile(null)\r\n\r\n\r\n     }\r\n\r\n\r\n     const sendNews = ()=>{\r\n        if (title !== '' && text !== '' && file!== null) {\r\n            const formaData = new FormData()\r\n            formaData.append('title',title)\r\n            formaData.append('text',text)\r\n            formaData.append('image',file)\r\n           addNews(formaData).then(data=>{\r\n            settitle('')\r\n            settext('')\r\n            setfile(null)\r\n            setFileImage(null)\r\n            setFileDiv(false)\r\n            navigate(HOME_ROUTE)\r\n            window.location.reload()\r\n            \r\n           })\r\n        }else{\r\n            alert('недостаточно данных')\r\n        }\r\n      \r\n        \r\n    }\r\n\r\n\r\n  return {fileload,clearFile,sendNews,fileImage,fileName,fileDiv,text,title,settext,settitle}\r\n}\r\n\r\nexport default useNews","import React, { useRef, useState } from 'react'\r\nimport { Modal } from '../../UI/modal/Modal'\r\nimport Input from '../../UI/input/Input'\r\nimport Button from '../../UI/button/Button'\r\nimport { newsSlice } from '../../../store2/reducers/NewsSlice'\r\nimport useNews from '../../../hooks/useNews'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport Button2 from '../../UI/button2/Button2'\r\nimport MyTextArea from '../../UI/myTextArea/MyTextArea'\r\nimport '../news.scss'\r\nconst RaitingModal = () => {\r\n\r\n    const {modalNews} = useAppSelector(state=>state.reducer.news)\r\n    const {setModalNews} = newsSlice.actions\r\n    const dispatch = useAppDispatch()\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n    const {title,text,fileload,fileName,fileDiv,fileImage,clearFile,sendNews,settext,settitle} = useNews()\r\n\r\n\r\n    const activateInput=()=>{\r\n        inputRef.current?.click()\r\n     }\r\n\r\n  return (\r\n    <Modal active={modalNews} setActive={(e:any)=>dispatch(setModalNews(e))} modalClass='raiting'>\r\n        <div className=\"RaitingModal\">\r\n            <div className=\"RaitingModal__top\">\r\n                <Input value={title} change={settitle} inputClass='registration gv' placeholder='Заголовок   *'/>\r\n            </div>\r\n            <div className=\"RaitingModal__text\">\r\n                <MyTextArea value={text} setValue={(e)=>settext(e)} placeholder='текст' className='RaitingModal__textarea'/>\r\n            </div>\r\n            <div className=\"RaitingModal__images\">\r\n                <div  className=\"RaitingModal__label\">\r\n                    <input ref={inputRef}  onChange={fileload} type=\"file\" className=\"RaitingModal__file\" />\r\n                <div  className=\"RaitingModal__l\">\r\n                    <Button2 onClick={activateInput}  className='buttonCart'>{fileName ? `${fileName}` : 'Выбрать изображение'} </Button2>\r\n                </div>\r\n                </div>\r\n                <div className={fileDiv ? \"RaitingModal__imageCover active \" :\"RaitingModal__imageCover \"}>     \r\n                <div className=\"RaitingModal__image\">\r\n                <span onClick={clearFile} className='icon-clear _icon-delete'></span>\r\n                    <img src={fileImage} alt=\"\"/>\r\n                </div>              \r\n                </div>    \r\n            </div>\r\n            <div className=\"RaitingModal__button\">\r\n                <Button2  onClick={sendNews} className='buttonCart'>Отправить</Button2>\r\n            </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default RaitingModal","import React, { useState } from 'react'\r\nimport { addComment } from '../https/newsApi'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { HOME_ROUTE } from '../app/config/routs'\r\nimport { useAppSelector } from './reduxHooks'\r\n\r\nconst useComment = () => {\r\n    const {user} = useAppSelector(state=>state.reducer.catalog)\r\n    const {newsId} = useAppSelector(state=>state.reducer.news)\r\n    const [name, setname] = useState<string>(user.name)\r\n    const [sername, setsername] = useState<string>(user.sername)\r\n    const [textComment, settextComment] = useState<string>('')\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const addCommentToNews = ()=>{\r\n        if (name !== '' && sername !== ''&& textComment !== '' ) {\r\n       addComment({name,sername,text:textComment,news:newsId}).then(data=>{\r\n        navigate(HOME_ROUTE)\r\n        window.location.reload()\r\n       })\r\n     }else{\r\n        alert('недостаточно данных')\r\n    }\r\n}\r\n\r\n\r\n  return {setname,setsername,settextComment,addCommentToNews,sername,textComment,name}\r\n}\r\n\r\nexport default useComment","import React, { useState } from 'react'\r\nimport Input from '../../UI/input/Input'\r\nimport { Modal } from '../../UI/modal/Modal'\r\nimport Button from '../../UI/button/Button'\r\nimport useComment from '../../../hooks/useComment'\r\nimport { newsSlice } from '../../../store2/reducers/NewsSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport Button2 from '../../UI/button2/Button2'\r\n\r\nconst CommentModal = () => {\r\n\r\n        const {modalCooment} = useAppSelector(state=>state.reducer.news)\r\n        const {setModalCooment} = newsSlice.actions\r\n        const dispatch = useAppDispatch()\r\n\r\nconst {addCommentToNews,setname,setsername,settextComment,sername,textComment,name}= useComment()\r\n\r\n\r\n  return (\r\n    <Modal active={modalCooment} setActive={(e:any)=>dispatch(setModalCooment(e))} modalClass='raiting'>\r\n    <div className=\"RaitingModal\">\r\n        <div className=\"RaitingModal__top\">\r\n            <Input value={name} change={setname} inputClass='registration gv' placeholder='Имя  *'/>\r\n            <Input value={sername} change={setsername} inputClass='registration gv' placeholder='Фамилия  *'/>\r\n        </div>\r\n        <div className=\"RaitingModal__text\">\r\n            <textarea value={textComment} onChange={(e)=>settextComment(e.target.value)} placeholder='отзыв' className='RaitingModal__textarea'>{textComment}</textarea>\r\n        </div>\r\n        <div className=\"RaitingModal__button\">\r\n        <Button2  onClick={addCommentToNews} className='buttonCart'>Отправить</Button2>\r\n        </div>\r\n        \r\n    </div>\r\n    \r\n   </Modal>\r\n  )\r\n}\r\n\r\nexport default CommentModal","import BodyNews from './bodyNews/BodyNews'\r\nimport RaitingModal from './raitingModal/NewsModal'\r\nimport CommentModal from './commentModal/CommentModal'\r\nimport Navigation from '../UI/navigation/Navigation'\r\nimport { newsSlice } from '../../store2/reducers/NewsSlice'\r\nimport Button from '../UI/button/Button'\r\nimport { useAppDispatch } from '../../hooks/reduxHooks'\r\nimport './news.scss'\r\nimport Button2 from '../UI/button2/Button2'\r\nconst MainNews = () => {\r\n    \r\n    const {setModalNews} = newsSlice.actions\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n  return (\r\n    <div className=\"News\">\r\n        <div className=\"News__container\">\r\n            <Navigation navigationClass='news'>Главная / Новости компании</Navigation>\r\n            <div className=\"News__title\"><span>Новости</span> Компании</div>\r\n            <div className=\"News__button\"><Button2 onClick={()=>dispatch(setModalNews(true))} className='buttonCart'>добавить новость</Button2></div>\r\n            <BodyNews/>\r\n        </div>\r\n        <RaitingModal/>\r\n        <CommentModal/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainNews","import Layout from '../app/Layout'\r\nimport MainNews from '../components/news/MainNews'\r\n\r\nconst News = () => {\r\n  return (\r\n    <Layout>\r\n        <MainNews/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default News"],"names":["Button2","_ref","_ref$onClick","onClick","children","_ref$className","className","_ref$rippleClass","rippleClass","_ref$ripple","ripple","buttonRef","useRef","_jsx","ref","onMouseDown","e","stopPropagation","circle","document","createElement","target","addEventListener","style","opacity","remove","appendChild","diameter","Math","max","clientWidth","clientHeight","radius","width","height","concat","left","clientX","current","getBoundingClientRect","top","clientY","classList","add","rippleEffect","memo","value","setValue","_ref$placeholder","placeholder","textAreaRef","_useState","useState","_useState2","_slicedToArray","focus","setFocus","rows","onFocus","onBlur","onChange","scrollHeight","_ref$navigationClass","navigationClass","addNews","_asyncToGenerator","_regeneratorRuntime","mark","_callee","info","_yield$$host$post","data","wrap","_context","prev","next","$host","post","sent","abrupt","stop","_x","apply","arguments","getAllNews","_ref2","_callee2","_yield$$host$post2","_context2","addComment","_ref3","_callee3","_yield$$host$post3","_context3","_x2","_ref$breakpoint","breakpoint","_ref$accordionClass","oneOpen","setVisibleAccordion","accordionClass","active","setactive","_useState3","_useState4","itemRef","accordRef","ff2","useCallback","window","innerWidth","useEffect","removeEventListener","_useState5","_useState6","_useState7","_useState8","gg","setTimeout","console","log","_jsxs","onTransitionEnd","loader","setloader","news","setnews","_newsSlice$actions","newsSlice","actions","setNewsId","setModalCooment","dispatch","useAppDispatch","then","map","el","date","format","locale","ru","src","API_URL","image","alt","title","text","id","_id","AccordionOne","comments","length","com","name","sername","Loader","ElementNews","fileImage","setFileImage","fileName","setFileName","fileDiv","setFileDiv","file","setfile","_useState9","_useState10","settext","_useState11","_useState12","settitle","navigate","useNavigate","fileload","reader","FileReader","readAsDataURL","files","onloadend","result","clearFile","sendNews","formaData","FormData","append","HOME_ROUTE","location","reload","alert","modalNews","useAppSelector","state","reducer","setModalNews","inputRef","_useNews","useNews","Modal","setActive","modalClass","Input","change","inputClass","MyTextArea","type","_inputRef$current","click","user","catalog","newsId","setname","setsername","textComment","settextComment","addCommentToNews","modalCooment","_useComment","useComment","Navigation","BodyNews","RaitingModal","CommentModal","Layout","MainNews"],"sourceRoot":""}