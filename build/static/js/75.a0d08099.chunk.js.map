{"version":3,"file":"static/js/75.a0d08099.chunk.js","mappings":"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","sources":["components/UI/navigation/Navigation.tsx","components/registration/bodyRegistration/BodyRegistration.tsx","store2/actions/RegistrationActions.ts","components/registration/submitRegistration/SubmitRegistration.tsx","components/registration/Mainregistration.tsx","pages/Registration.tsx"],"sourcesContent":["import React, { type FC, type ReactNode } from 'react'\r\nimport './navigation.scss'\r\ninterface FooterProps {\r\n    name?: string\r\n    children?: ReactNode\r\n    changeName?: boolean\r\n    lock?: boolean\r\n    navigationClass?: string\r\n}\r\nconst Navigation: FC<FooterProps> = ({ children, navigationClass = 'origin' }) => {\r\n    return (\r\n        <div className={`Navigation ${navigationClass}`}>{children}</div>\r\n\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import { useEffect, useRef, useState } from 'react'\r\nimport Input from '../../UI/input/Input'\r\nimport { registrationSlice } from '../../../store2/reducers/RegistrationSlice'\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\r\nimport { DateCalendar, DateField, LocalizationProvider } from '@mui/x-date-pickers'\r\nimport dayjs, { type Dayjs } from 'dayjs'\r\nimport { changePassword, onSetMail } from '../../../store2/actions/RegistrationActions'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\n\r\nconst BodyRegistration = () => {\r\n    const calendarIcon = useRef<HTMLImageElement>(null)\r\n    const calendarRef = useRef<HTMLDivElement>(null)\r\n    const [calendar, setcalendar] = useState<boolean>(false)\r\n\r\n    const { secondName, name, mail, data, password, tell, validationEmail, validationPassword } = useAppSelector(state => state.reducer.registration)\r\n    const { setData, setName, setSecondName, setTell } = registrationSlice.actions\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click', onCalendar)\r\n        document.querySelector('.css-9ddj71-MuiInputBase-root-MuiOutlinedInput-root input')?.addEventListener('click', onCalendar)\r\n        return () => { document.removeEventListener('click', onCalendar) }\r\n    }, [])\r\n\r\n    const onCalendar = (e: any) => {\r\n        if (e.target !== calendarIcon.current && !calendarRef.current?.contains(e.target)) setcalendar(false)\r\n    }\r\n\r\n    const dispatchName = (e: string) => {\r\n        dispatch(setName(e))\r\n    }\r\n\r\n    const dispatchMail = (e: string) => {\r\n        dispatch(onSetMail(e))\r\n    }\r\n\r\n    const dispatchTell = (e: string) => {\r\n        dispatch(setTell(e))\r\n    }\r\n\r\n    const dispatchPassWord = (e: string) => {\r\n        dispatch(changePassword(e))\r\n    }\r\n\r\n    const dispatchData = (el: Dayjs | null) => {\r\n        el && dispatch(setData(el.toString()))\r\n    }\r\n    const onSetCalendar = () => {\r\n        setcalendar((prev: any) => !prev)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Registration__body\">\r\n            <Input value={secondName} change={setSecondName} inputClass='registration' placeholder='Фамилия *'/>\r\n            <Input value={name} change={dispatchName} inputClass='registration' placeholder='Имя *'/>\r\n            <Input value={mail} change={dispatchMail} inputClass={validationEmail ? 'registration' : 'registration act'} placeholder='E-mail *'/>\r\n            <Input value={dayjs(data)} change={dispatchData} inputClass='registration g' lock={true} placeholder='Дата рождения'>\r\n                <div onClick={onSetCalendar} className=\"Registration__calendar-icon\">\r\n                    <img ref={calendarIcon} src={require('../../../images/user/calendar.png')} alt=\"\"/>\r\n                </div>\r\n                <div ref={calendarRef} className={calendar ? 'Registration__calendar active' : 'Registration__calendar'}>\r\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                        <DateCalendar value={dayjs(data)} onChange={dispatchData} />\r\n                    </LocalizationProvider>\r\n                </div>\r\n\r\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DateField\r\n                        label=\"Controlled field\"\r\n                        value={dayjs(data)}\r\n                        onChange={dispatchData}\r\n                    />\r\n                </LocalizationProvider>\r\n            </Input>\r\n            <Input value={password} change={dispatchPassWord} inputClass={validationPassword ? 'registration' : 'registration act'} placeholder='Пароль'/>\r\n            <Input value={tell} change={dispatchTell} inputClass='registration' placeholder='Мобильный *'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BodyRegistration\n","import jwtDecode from 'jwt-decode'\r\nimport { changeUser, registration } from '../../https/userApi'\r\nimport { EMAIL_REGEXP, PASSWORD_REGEX } from '../../utils/config'\r\nimport { registrationSlice } from '../reducers/RegistrationSlice'\r\nimport { type AppDispatch, store } from '../store'\r\n\r\nexport const onSetMail = (e: string) => async (dispatch: AppDispatch) => {\r\n    const { setMail, setValidationEmail } = registrationSlice.actions\r\n    dispatch(setMail(e))\r\n\r\n    if (!EMAIL_REGEXP.test(e) && e !== '') {\r\n        dispatch(setValidationEmail(false))\n    } else {\r\n        dispatch(setValidationEmail(true))\r\n    }\n}\r\n\r\nexport const changePassword = (password: string) => async (dispatch: AppDispatch) => {\r\n    const { setPassword, setValidationPassword } = registrationSlice.actions\r\n    dispatch(setPassword(password))\r\n\r\n    if (!PASSWORD_REGEX.test(password) && password !== '') {\r\n        dispatch(setValidationPassword(false))\r\n    } else {\r\n        dispatch(setValidationPassword(true))\r\n    }\n}\r\n\r\nexport const onRegistration = () => async (dispatch: AppDispatch) => {\r\n    const { setLoader, setSuccessfullReg } = registrationSlice.actions\r\n    const currentState = store.getState()\r\n    const { secondName, name, mail, data, password, tell, validationEmail, validationPassword } = currentState.reducer.registration\r\n\r\n    try {\r\n        if (validationEmail && validationPassword && mail !== '' && password !== '') {\r\n            dispatch(setLoader(true))\r\n\r\n            registration({ mail, password }).then(response => {\r\n                const user = jwtDecode<any>(response.refreshToken)\r\n                changeUser({ id: user.id, name, serName: secondName, birthDate: data, tell }).then(data => {\r\n                    dispatch(setSuccessfullReg(true))\r\n                    console.log(data, '1111')\r\n\r\n                    setTimeout(() => {\r\n                        dispatch(setSuccessfullReg(false))\r\n                    }, 3000)\r\n                })\n            }).finally(() => {\r\n                dispatch(setLoader(false))\r\n            })\r\n        } else {\r\n            alert('ошибка при регистрации')\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\n}\r\n","import Button from '../../UI/button/Button'\r\nimport { onRegistration } from '../../../store2/actions/RegistrationActions'\r\nimport { useAppDispatch } from '../../../hooks/reduxHooks'\r\n\r\nconst SubmitRegistration = () => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const dispatchRegistration = () => {\r\n        dispatch(onRegistration())\r\n    }\r\n\r\n    return (\r\n        <div className=\"Registration__submit\">\r\n            <Button onClick={dispatchRegistration} className='registration g'>Зарегистрироваться</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitRegistration\n","import React from 'react'\r\nimport BodyRegistration from './bodyRegistration/BodyRegistration'\r\nimport SubmitRegistration from './submitRegistration/SubmitRegistration'\r\nimport Navigation from '../UI/navigation/Navigation'\r\nimport Loader from '../UI/loader/Loader'\r\nimport { useAppSelector } from '../../hooks/reduxHooks'\r\nimport './registration.scss'\r\n\r\nconst Mainregistration = () => {\r\n    const { loader, successfullReg } = useAppSelector(state => state.reducer.registration)\r\n\r\n    return (\r\n        <div className=\"Registration\">\r\n\r\n            <div className=\"Registration__container\">\r\n                <Navigation navigationClass='registration'>Главная / Регистрация</Navigation>\r\n                <div className=\"Registration__title\">Регистрация</div>\r\n                <BodyRegistration/>\r\n                <SubmitRegistration/>\r\n            </div>\r\n            {loader && <div className=\"Registration__loader\"><Loader/></div>}\r\n            {successfullReg && <div className=\"Registration__successfullReg\">Успешная регистрация</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mainregistration\n","import Layout from '../app/Layout'\r\nimport Mainregistration from '../components/registration/Mainregistration'\r\n\r\nconst Registration = () => {\r\n    return (\r\n        <Layout>\r\n            <Mainregistration/>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Registration\n"],"names":["_ref","children","navigationClass","_jsx","className","concat","BodyRegistration","calendarIcon","useRef","calendarRef","calendar","setcalendar","useState","secondName","name","mail","data","password","tell","validationEmail","validationPassword","useAppSelector","state","reducer","registration","setData","setName","setSecondName","setTell","registrationSlice","actions","dispatch","useAppDispatch","useEffect","_document$querySelect","document","addEventListener","onCalendar","querySelector","removeEventListener","e","_calendarRef$current","target","current","contains","dispatchData","el","toString","_jsxs","Input","value","change","inputClass","placeholder","async","setMail","setValidationEmail","EMAIL_REGEXP","test","onSetMail","dayjs","lock","onClick","onSetCalendar","prev","ref","src","require","alt","LocalizationProvider","dateAdapter","AdapterDayjs","DateCalendar","onChange","DateField","label","setPassword","setValidationPassword","PASSWORD_REGEX","changePassword","SubmitRegistration","Button","dispatchRegistration","setLoader","setSuccessfullReg","currentState","store","getState","then","response","user","jwtDecode","refreshToken","changeUser","id","serName","birthDate","console","log","setTimeout","finally","alert","error","Mainregistration","loader","successfullReg","Navigation","Loader","Registration","Layout"],"sourceRoot":""}