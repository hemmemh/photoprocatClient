{"version":3,"file":"static/js/869.6dc133dd.chunk.js","mappings":"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","sources":["components/UI/fold/Fold.tsx","components/UI/navigation/Navigation.tsx","store2/actions/CompareActions.ts","components/compare/bodyCompare/topCompare/leftCompare/LeftCompare.tsx","components/compare/bodyCompare/topCompare/topSlider/TopSlider.tsx","components/compare/bodyCompare/topCompare/TopCompare.tsx","components/compare/bodyCompare/bottomCompare/BottomCompare.tsx","components/compare/bodyCompare/buttonComapre/ButtonComapre.tsx","hooks/useItemsClick.tsx","components/compare/bodyCompare/itemsCompare/ItemsCompare.tsx","components/compare/bodyCompare/BodyCompare.tsx","components/compare/MainCompare.tsx","pages/Compare.tsx"],"sourcesContent":["import React, { FC, useEffect, useRef, useState } from 'react'\r\nimport './fold.scss'\r\ninterface FooterProps{  \r\n    slice?:number,\r\n    children?:any\r\n    changeName?:boolean\r\n    lock?:boolean\r\n    navigationClass?:string\r\n    foldClass?:string\r\n    value:boolean\r\n    foldActive?:(a:any)=>void\r\n    foldChange?:(a:any)=>void\r\n  }\r\nconst Fold: FC<FooterProps>  = ({value,foldActive=()=>{},foldChange=()=>{},children,slice=1,foldClass='origin'}) => {\r\n\r\nconst bodyRef = useRef<any>(null)\r\n\r\nuseEffect(() => {\r\n\r\n    const sliceChildren:any = [].slice.call(bodyRef.current.children)\r\n    console.log(sliceChildren.length,'pppp');\r\n    \r\n    if (bodyRef.current && sliceChildren.length>slice && !value) {\r\n        sliceChildren.slice(slice,sliceChildren.length).forEach((el:any) => {\r\n           el.style.display = \"none\";\r\n        })\r\n        let sliceHeight = 0\r\n        sliceChildren.slice(0,slice).forEach((el:any) => {\r\n            sliceHeight+=el.offsetHeight;\r\n        })\r\n        bodyRef.current.style.height = `${sliceHeight}px`;\r\n       \r\n    }else{\r\n        foldActive(false)\r\n    }\r\n}, [])\r\n\r\n\r\nuseEffect(() => {\r\n    const sliceChildren:any = [].slice.call(bodyRef.current.children)\r\n    if (bodyRef.current && sliceChildren.length>slice) {\r\n        if (value) {\r\n            let sliceHeight = 0\r\n           console.log(bodyRef.current,'ty');\r\n           \r\n            sliceChildren.slice(0,slice).forEach((el:any) => {\r\n                sliceHeight+=el.offsetHeight;\r\n            })\r\n            bodyRef.current.style.height = `${sliceHeight}px`;\r\n            sliceChildren.slice(slice,sliceChildren.length).forEach((el:any) => {\r\n               el.style.display = \"inherit\";\r\n            })\r\n            bodyRef.current.style.height = `${bodyRef.current.scrollHeight}px`;\r\n            setTimeout(() => {\r\n                bodyRef.current && (bodyRef.current.style.height = `auto`)  \r\n              }, 300);\r\n           \r\n        \r\n         }else{\r\n           \r\n           \r\n            let sliceHeight = 0\r\n            bodyRef.current.style.height = `${bodyRef.current.scrollHeight}px`;\r\n            sliceChildren.slice(0,slice).forEach((el:any) => {\r\n                sliceHeight+=el.offsetHeight;\r\n            })\r\n            bodyRef.current.style.height = `${sliceHeight}px`;\r\n          \r\n          setTimeout(() => {\r\n            sliceChildren.slice(slice,sliceChildren.length).forEach((el:any) => {\r\n               el.style.display = \"none\";\r\n            })\r\n            bodyRef.current && (bodyRef.current.style.height = `auto`)\r\n          }, 300);\r\n               \r\n         \r\n         }\r\n    }\r\n\r\n}, [value])\r\n\r\n const change = ()=>{\r\n    foldChange((prev:any)=>!prev)\r\n   \r\n }\r\n  return (\r\n  <div className={`Fold ${foldClass}`}>\r\n    <div ref={bodyRef} className=\"Fold__body\">{\r\n        children.slice(0,children.length).map((e:any,id:number)=>\r\n            <div key={id} className=\"Fold__item\">{e}</div>  \r\n        )\r\n    }</div>\r\n    \r\n  </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default Fold","import React, { Children, FC, ReactNode } from 'react'\r\nimport './navigation.scss'\r\ninterface FooterProps{  \r\n    name?:string,\r\n    children?:any\r\n    changeName?:boolean\r\n    lock?:boolean\r\n    navigationClass?:string\r\n  }\r\nconst Navigation:FC<FooterProps> = ({children,navigationClass='origin'}) => {\r\n  return (\r\n    <div className={`Navigation ${navigationClass}`}>{children}</div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Navigation","import { getCompare, removeItemFromCompare, removeItemFromCompareByType } from \"../../https/compareApi\";\r\nimport { ICompareItem } from \"../../utils/interfaces\";\r\nimport { catalogSlice } from \"../reducers/CatalogSlice\";\r\nimport { compareSlice } from \"../reducers/CompareSlice\";\r\nimport { navbarSlice } from \"../reducers/NavBarSlice\";\r\nimport { AppDispatch, store } from \"../store\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const putCompare = ()=>async (dispatch:AppDispatch) => {\r\n  const currentState = store.getState();\r\n  const {user} = currentState.reducer.catalog\r\n  const {load} = currentState.reducer.compare\r\n  const {sumPrice,products} = currentState.reducer.basket\r\n  const {setProducts} = navbarSlice.actions\r\n  const {setCompareTypes,setActiveType,setInformations,setLoad} = compareSlice.actions\r\n\r\n  const {setCompare} = catalogSlice.actions\r\n  try {\r\n    dispatch(setLoad(true))\r\n    const data= await getCompare({id:user.compare})\r\n      dispatch(setCompare(data.compareItems))\r\n      \r\n    \r\n      const typesArr:any = []\r\n      data.compareItems.forEach((el:any)=>{\r\n          if (!typesArr.includes(el.product.type.name)) {\r\n              typesArr.push(el.product.type.name)\r\n          }\r\n     \r\n      dispatch(setCompareTypes(typesArr))\r\n      dispatch(setActiveType(typesArr[0]))\r\n      dispatch(setInformations(data.compareItems.find((el:any)=>el.product.type.name === typesArr[0]).product.information))\r\n      \r\n      \r\n    \r\n    \r\n    })\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    dispatch(setLoad(false))\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const updateCompare = ()=>async (dispatch:AppDispatch) => {\r\n  const currentState = store.getState();\r\n  const {user,compare} = currentState.reducer.catalog\r\n  const {activeType} = currentState.reducer.compare\r\n  const {setProducts} = navbarSlice.actions\r\n  const {setCompareTypes,setActiveType,setInformations,setActiveTypeLoad} = compareSlice.actions\r\n\r\n  const {setCompare} = catalogSlice.actions\r\n  try {\r\n    dispatch(setActiveTypeLoad(false))\r\n        \r\n    const typesArr:any = []\r\n    compare.forEach((el:any)=>{\r\n        if (!typesArr.includes(el.product.type.name)) {\r\n            typesArr.push(el.product.type.name)\r\n        }\r\n    })\r\n    dispatch(setCompareTypes(typesArr))\r\n    \r\n    if (typesArr.length === 0) {\r\n        dispatch(setActiveType('Типы'))\r\n    \r\n    }else{\r\n        if (!compare.find((ell:any)=>ell.product.type.name === activeType)) {\r\n            dispatch(setActiveType(typesArr[0]))\r\n            const item =  compare.find((ell:ICompareItem)=>ell.product.type.name === typesArr[0])\r\n            item &&  dispatch(setInformations(item.product.information ))\r\n            \r\n            \r\n    \r\n        }\r\n       \r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const removeByType = ()=>async (dispatch:AppDispatch) => {\r\n  const currentState = store.getState();\r\n  const {user,compare} = currentState.reducer.catalog\r\n  const {activeType} = currentState.reducer.compare\r\n  const navbar = navbarSlice.actions\r\n  const {setCompareTypes,setActiveType,setInformations,setActiveTypeLoad} = compareSlice.actions\r\n\r\n  const {setCompare} = catalogSlice.actions\r\n  try {\r\n    removeItemFromCompareByType({type:activeType,compareId:user.compare}).then(data=>{\r\n      dispatch( navbar.setCompare(data.compareItems.length))\r\n      dispatch(setCompare(data.compareItems))\r\n      dispatch(setActiveTypeLoad(false)   )\r\n      \r\n  })\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const changeActiveType = (el:any)=>async (dispatch:AppDispatch) => {\r\n  const currentState = store.getState();\r\n  const {compare} = currentState.reducer.catalog\r\n  const {setActiveType,setInformations} = compareSlice.actions\r\n\r\n  dispatch(setActiveType(el))\r\n  const item =  compare.find((ell:ICompareItem)=>ell.product.type.name === el)\r\n  item &&  dispatch(setInformations(item.product.information ))\r\n\r\n}\r\n\r\n\r\nexport const removeItem = (id:any,compareId:any)=>async (dispatch:AppDispatch) => {\r\n  const currentState = store.getState();\r\n  const {compare} = currentState.reducer.catalog\r\n  const navbar  = currentState.reducer.navbar\r\n  const {setCompare} = catalogSlice.actions\r\n  const navbarSl = navbarSlice.actions\r\n try {\r\n  dispatch(setCompare([...compare.filter((el:any)=>el.product._id !== id)]))\r\n  dispatch(navbarSl.setCompare(navbar.compare - 1))\r\n  \r\n  removeItemFromCompare({id,compareId}).then((data:any)=>{\r\n      console.log(data);\r\n  })\r\n } catch (error) {\r\n  console.log(error);\r\n }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n\r\nimport { useAppDispatch } from '../../../../../hooks/reduxHooks'\r\nimport { removeByType } from '../../../../../store2/actions/CompareActions'\r\n\r\nconst LeftCompare = () => {\r\n    const dispatch = useAppDispatch()\r\n\r\n  return (\r\n    <div className=\"main-compare__top-left\">\r\n       <div onClick={()=>dispatch(removeByType())} className=\"main-compare__clear _icon-delete\">Очистить</div>\r\n       <div className=\"main-compare__item\">Модель Фотоаппарата</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeftCompare","import React from 'react'\r\nimport { Controller } from 'swiper'\r\nimport { compareSlice } from '../../../../../store2/reducers/CompareSlice'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\nimport { API_URL } from '../../../../../utils/config'\r\nimport { removeItem } from '../../../../../store2/actions/CompareActions'\r\nimport { useAppDispatch, useAppSelector } from '../../../../../hooks/reduxHooks'\r\nimport './topSlider.scss'\r\nimport { ICompareItem } from '../../../../../utils/interfaces'\r\n\r\n\r\nconst breakpoints ={\r\n  786: {\r\n  \r\n  \r\n      spaceBetween: 55,\r\n      slidesPerView:3\r\n    },\r\n  982: {\r\n  \r\n      spaceBetween: 50,\r\n      slidesPerView:4\r\n    },\r\n  1213: {\r\n      slidesPerView:4,\r\n    spaceBetween: 118,\r\n    \r\n  },\r\n  \r\n  }\r\nconst TopSlider = ({setFirstSwiper,secondSwiper}:{setFirstSwiper:(a:any)=>void,secondSwiper:any}) => {\r\n    const {activeType} = useAppSelector(state=>state.reducer.compare)\r\n    const {user,compare} = useAppSelector(state=>state.reducer.catalog)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n  return (\r\n    <div className=\"main-compare__top-slider\">\r\n        <div className=\"main-compare__top-slider-cover\">\r\n                  \r\n    <Swiper\r\nslidesPerView={2}\r\nspaceBetween={0}\r\nclassName=\"swiperCompare\"\r\nmodules={[Controller]}\r\nonSwiper={(e)=>setFirstSwiper(e)}\r\n\r\ncontroller={{ control: secondSwiper }}\r\nbreakpoints={breakpoints}   \r\n>\r\n{compare.map((el:ICompareItem)=>{\r\nif(el.product.type.name === activeType){\r\n    return ( <SwiperSlide key={el._id}>\r\n        <div className=\"swiperCompare__item item-swiperCompare\">\r\n             <div className=\"item-swiperCompare__image-cover\">\r\n                 <div className=\"item-swiperCompare__image\">\r\n                 <img src={`${API_URL}/${el.product.name}/${JSON.parse(el.product.images)[0]}`} alt=\"\"/>\r\n                 </div>\r\n             </div>\r\n             <div onClick={()=>dispatch(removeItem(el.product._id,user.compare))} className=\"item-swiperCompare__delete\"></div>\r\n             <div className=\"item-swiperCompare__name\">{el.product.name}</div>\r\n             <div className=\"item-swiperCompare__brand\">{el.product.brand.name}</div>\r\n        </div>\r\n        </SwiperSlide>)\r\n}\r\n\r\n}\r\n)}\r\n    </Swiper>\r\n        </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default TopSlider","import React from 'react'\r\nimport LeftCompare from './leftCompare/LeftCompare'\r\nimport TopSlider from './topSlider/TopSlider'\r\n\r\nconst TopCompare = ({setFirstSwiper,secondSwiper}:{setFirstSwiper:(a:any)=>void,secondSwiper:any}) => {\r\n  return (\r\n    <div className=\"main-compare__top\">\r\n        <LeftCompare/>\r\n        <TopSlider setFirstSwiper={setFirstSwiper} secondSwiper={secondSwiper}/>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default TopCompare","import React, { useState } from 'react'\r\nimport Fold from '../../../UI/fold/Fold'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\nimport { Controller } from 'swiper'\r\n\r\nimport { compareSlice } from '../../../../store2/reducers/CompareSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../../hooks/reduxHooks'\r\nimport './bottomCompare.scss'\r\nimport { ICompareItem, IInformation } from '../../../../utils/interfaces'\r\nconst BottomCompare = ({setSecondSwiper,firstSwiper}:{setSecondSwiper:(a:any)=>void,firstSwiper:any}) => {\r\n\r\n    const {compare} = useAppSelector(state=>state.reducer.catalog)\r\n    const {activeType,fold,informations} = useAppSelector(state=>state.reducer.compare)\r\n    const {setFold} = compareSlice.actions\r\n    const dispatch = useAppDispatch()\r\n  return (\r\n    <div className=\"main-compare__bottom\">\r\n    <div className=\"main-compare__bottom-left\">\r\n         <Fold value={fold} foldChange={(e:any)=>dispatch(setFold(e))} slice={2} >\r\n         { informations.map((el:IInformation)=> \r\n          <div key={el._id} className=\"main-compare__bottom-left__item\">{el.name}</div>\r\n          )}\r\n     </Fold>\r\n    </div>\r\n    <div className=\"item-swiperCompare__bottom-right\">                  \r\n    <Swiper\r\nslidesPerView={2}\r\nclassName=\"swiperCompare2\"\r\nspaceBetween={9}\r\nmodules={[Controller]}\r\nonSwiper={(e)=>setSecondSwiper(e)}\r\ncontroller={{ control: firstSwiper }}\r\nbreakpoints={{\r\n786: {\r\n    spaceBetween: 55,\r\n\r\n    slidesPerView:3\r\n  },\r\n982: {\r\n\r\n    spaceBetween: 55,\r\n    slidesPerView:4\r\n  },\r\n1213: {\r\n    slidesPerView:4,\r\n  spaceBetween: 120,\r\n  \r\n},\r\n\r\n}} \r\n>\r\n   {compare.map((el:ICompareItem)=>{\r\n           if(el.product.type.name === activeType){\r\n            return(\r\n                <SwiperSlide key={el._id}>\r\n                <div className=\"swiperCompare2__item item-swiperCompare2\">\r\n                 <Fold foldClass='ggg' value={fold} foldChange={(e:any)=>dispatch(setFold(e))} slice={2} >\r\n                    {el.product.information.map((m:any)=> <div key={m.description} className=\"item-swiperCompare2__item\">{m.description}</div>)}\r\n                 </Fold>\r\n                </div>\r\n             </SwiperSlide>\r\n\r\n            )\r\n           }\r\n   }\r\n    \r\n  )}\r\n\r\n\r\n\r\n    </Swiper>\r\n    \r\n    </div>\r\n   \r\n</div>\r\n  )\r\n}\r\n\r\nexport default BottomCompare","import React from 'react'\r\nimport Button from '../../../UI/button/Button'\r\n\r\nimport { compareSlice } from '../../../../store2/reducers/CompareSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../../hooks/reduxHooks'\r\n\r\nconst ButtonComapre = () => {\r\n\r\n    const {fold} = useAppSelector(state=>state.reducer.compare)\r\n    const {setFold} = compareSlice.actions\r\n    const dispatch = useAppDispatch()\r\n  return (\r\n    <div className=\"main-compare__button\">\r\n    <Button onClick={()=>dispatch(setFold(!fold))} className='compare g'>{fold ? 'Свернуть' : 'Показать все'}</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ButtonComapre","import React, { Dispatch, RefObject, SetStateAction, useCallback, useEffect, useState } from 'react'\r\n\r\nconst useItemsClick = ({actionRef,actionRef2,setitemsView}:{actionRef:RefObject<HTMLDivElement>,actionRef2:RefObject<HTMLDivElement>,setitemsView:Dispatch<SetStateAction<boolean>>}) => {\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click',addClick)\r\n        return () =>{ \r\n            document.removeEventListener('click', addClick)\r\n            }\r\n      }, [])\r\n      \r\n      const addClick = useCallback(\r\n        (e:any) => {\r\n          if (actionRef.current && actionRef2.current) {\r\n            if (!actionRef2.current.contains(e.target) &&  e.target !== actionRef.current) {\r\n                setitemsView(false)\r\n               \r\n            }\r\n          }\r\n        },\r\n        [],\r\n      )\r\n\r\n\r\n}\r\n\r\nexport default useItemsClick","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport { removeItemFromCompareByType } from '../../../../https/compareApi'\r\n\r\nimport { changeActiveType, removeByType } from '../../../../store2/actions/CompareActions'\r\nimport useItemsClick from '../../../../hooks/useItemsClick'\r\nimport { useAppDispatch, useAppSelector } from '../../../../hooks/reduxHooks'\r\nimport './itemsComapre.scss'\r\nconst ItemsCompare = () => {\r\n    \r\n    const {activeType,compareTypes} = useAppSelector(state=>state.reducer.compare)\r\n    const {compare} = useAppSelector(state=>state.reducer.catalog)\r\n    const dispatch = useAppDispatch()\r\n    const actionRef = useRef<HTMLDivElement>(null)\r\n    const actionRef2 = useRef<HTMLDivElement>(null)\r\n    const [itemsView, setitemsView] = useState<boolean>(false)\r\n\r\n    useItemsClick({actionRef,actionRef2,setitemsView})\r\n\r\n  return (\r\n    <div className=\"Compare__items items-compare\">\r\n      <div ref={actionRef2}  className=\"items-compare__cover\" onClick={()=>setitemsView(prev=>!prev)}>\r\n      <div  className={itemsView ?\"items-compare__action active\" : \"items-compare__action\"}> <span></span></div>\r\n      </div>\r\n      \r\n       \r\n        <div onClick={()=>dispatch(removeByType())} className=\"items-compare__delete _icon-delete\"></div>\r\n        \r\n        <div ref={actionRef} className={itemsView ? \"items-compare__body active\" : \"items-compare__body\"}>\r\n            {compareTypes.map((el:any)=><div key={el} onClick={()=>dispatch(changeActiveType(el))} className={activeType === el ? \"items-compare__item active\" : \"items-compare__item\"}>{el} ({compare.filter((ell:any)=>ell.product.type.name === el).length})</div>)}\r\n        </div>\r\n        \r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemsCompare","import React, { useState } from 'react'\r\nimport TopCompare from './topCompare/TopCompare'\r\nimport BottomCompare from './bottomCompare/BottomCompare'\r\nimport ButtonComapre from './buttonComapre/ButtonComapre'\r\nimport ItemsCompare from './itemsCompare/ItemsCompare'\r\nimport { useAppSelector } from '../../../hooks/reduxHooks'\r\nimport './BodyCompare.scss'\r\nconst BodyCompare = () => {\r\n    const {user,compare} = useAppSelector(state=>state.reducer.catalog)\r\n    const [firstSwiper, setFirstSwiper] = useState(null)\r\n    const [secondSwiper, setSecondSwiper] = useState(null)\r\n  return (\r\n    <div className=\"Compare__topic\">\r\n    <div className=\"Compare__title\">СРАВНИТЬ <span>{compare.length} ТОВАРОВ</span></div>\r\n    <ItemsCompare/>\r\n    <div className=\"Compare__main main-compare\">\r\n        <TopCompare   setFirstSwiper={setFirstSwiper} secondSwiper={secondSwiper}/>\r\n        <BottomCompare setSecondSwiper ={setSecondSwiper} firstSwiper={firstSwiper}/>\r\n        <ButtonComapre/>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BodyCompare","import  {  useEffect, useState } from 'react'\r\nimport BodyCompare from './bodyCompare/BodyCompare'\r\n\r\nimport Navigation from '../UI/navigation/Navigation'\r\nimport { compareSlice } from '../../store2/reducers/CompareSlice'\r\nimport { putCompare, updateCompare } from '../../store2/actions/CompareActions'\r\nimport { useAppDispatch, useAppSelector } from '../../hooks/reduxHooks'\r\nimport './compare.scss'\r\nimport SpinnerBody from '../UI/spinnerBody/SpinnerBody'\r\nconst MainCompare = () => {\r\n    const {compare} = useAppSelector(state=>state.reducer.catalog)\r\n    const {activeType,load} = useAppSelector(state=>state.reducer.compare)\r\n    const {setActiveTypeLoad} = compareSlice.actions\r\n    const dispatch = useAppDispatch()\r\n    const [loadCompare,setloadCompare] = useState<boolean>(false)\r\n\r\n\r\n    useEffect(() => {\r\n       dispatch(putCompare())\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateCompare())\r\n    }, [compare])\r\n    \r\n    \r\n    useEffect(() => {\r\n       if (activeType !== 'Типы') {\r\n        dispatch(setActiveTypeLoad(true))\r\n       }\r\n    }, [activeType])\r\n    \r\n\r\n  return (\r\n    <div className=\"Compare\">\r\n      <div className=\"Compare__container\">\r\n          <div className=\"Compare__body\">\r\n          <Navigation>Главная / Сравнить товары</Navigation>\r\n      {load ?\r\n      <SpinnerBody/>:\r\n       compare && compare.length !== 0 ?\r\n      <BodyCompare/>\r\n      :\r\n      <div className='Compare__none _icon-compare'>Не выбраны товары</div>\r\n      }\r\n          </div>\r\n      </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default MainCompare","\r\nimport \"swiper/css\";\r\nimport \"swiper/css/free-mode\";\r\nimport \"swiper/css/navigation\";\r\nimport \"swiper/css/thumbs\";\r\nimport Layout from '../app/Layout';\r\nimport MainCompare from '../components/compare/MainCompare';\r\n\r\n\r\nconst Compare = () => {\r\n  return (\r\n    <Layout>\r\n        <MainCompare/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Compare"],"names":["_ref","value","foldActive","foldChange","children","slice","foldClass","bodyRef","useRef","useEffect","sliceChildren","call","current","console","log","length","forEach","el","style","display","sliceHeight","offsetHeight","height","concat","scrollHeight","setTimeout","_jsx","className","ref","map","e","id","navigationClass","removeByType","async","currentState","store","getState","user","compare","reducer","catalog","activeType","navbar","navbarSlice","actions","setCompareTypes","setActiveType","setInformations","setActiveTypeLoad","compareSlice","setCompare","catalogSlice","removeItemFromCompareByType","type","compareId","then","data","dispatch","compareItems","error","LeftCompare","useAppDispatch","_jsxs","onClick","breakpoints","spaceBetween","slidesPerView","setFirstSwiper","secondSwiper","useAppSelector","state","Swiper","modules","Controller","onSwiper","controller","control","product","name","SwiperSlide","src","API_URL","JSON","parse","images","alt","_id","navbarSl","filter","removeItemFromCompare","removeItem","brand","TopSlider","setSecondSwiper","firstSwiper","fold","informations","setFold","Fold","information","m","description","ButtonComapre","Button","actionRef","actionRef2","setitemsView","document","addEventListener","addClick","removeEventListener","useCallback","contains","target","ItemsCompare","compareTypes","itemsView","useState","useItemsClick","prev","item","find","ell","changeActiveType","BodyCompare","TopCompare","BottomCompare","MainCompare","load","loadCompare","setloadCompare","sumPrice","products","basket","setProducts","setLoad","getCompare","typesArr","includes","push","Navigation","SpinnerBody","Compare","Layout"],"sourceRoot":""}