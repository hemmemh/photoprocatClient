{"version":3,"file":"static/js/75.f2c3e3ee.chunk.js","mappings":"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","sources":["components/UI/navigation/Navigation.tsx","components/registration/bodyRegistration/BodyRegistration.tsx","store2/actions/RegistrationActions.ts","components/registration/submitRegistration/SubmitRegistration.tsx","components/registration/Mainregistration.tsx","pages/Registration.tsx"],"sourcesContent":["import React, { Children, FC, ReactNode } from 'react'\r\nimport './navigation.scss'\r\ninterface FooterProps{  \r\n    name?:string,\r\n    children?:any\r\n    changeName?:boolean\r\n    lock?:boolean\r\n    navigationClass?:string\r\n  }\r\nconst Navigation:FC<FooterProps> = ({children,navigationClass='origin'}) => {\r\n  return (\r\n    <div className={`Navigation ${navigationClass}`}>{children}</div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Navigation","import React, { useEffect, useRef, useState } from 'react'\r\nimport Input from '../../UI/input/Input'\r\nimport { registrationSlice } from '../../../store2/reducers/RegistrationSlice'\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\r\nimport { DateCalendar, DateField, LocalizationProvider } from '@mui/x-date-pickers'\r\nimport dayjs, { Dayjs } from 'dayjs'\r\nimport { changePassword, onSetMail } from '../../../store2/actions/RegistrationActions'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\n\r\nconst BodyRegistration = () => {\r\n    const calendarIcon = useRef<HTMLImageElement>(null)\r\n    const calendarRef = useRef<HTMLDivElement>(null)\r\n    const [calendar, setcalendar] = useState<boolean>(false)\r\n\r\n    const {secondName,name,mail,data,password,tell,validationEmail,validationPassword} = useAppSelector(state=>state.reducer.registration)\r\n    const {setData,setName,setSecondName,setTell} = registrationSlice.actions\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click',onCalendar)\r\n        document.querySelector('.css-9ddj71-MuiInputBase-root-MuiOutlinedInput-root input')?.addEventListener('click',onCalendar)\r\n        return () => document.removeEventListener('click',onCalendar);\r\n    }, [])\r\n\r\n    \r\n    const onCalendar = (e:any)=>{\r\n        if (e.target !== calendarIcon.current && !calendarRef.current?.contains(e.target)) setcalendar(false)\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"Registration__body\">\r\n    <Input value={secondName} change={setSecondName} inputClass='registration' placeholder='Фамилия *'/>\r\n    <Input value={name} change={(e:string)=>dispatch(setName(e))} inputClass='registration' placeholder='Имя *'/>\r\n    <Input value={mail} change={(e:string)=>dispatch(onSetMail(e)) } inputClass={validationEmail ?'registration' : 'registration act'} placeholder='E-mail *'/>\r\n    <Input value={dayjs(data)} change={(e:Dayjs)=>dispatch(setData(e.toString()))} inputClass='registration g'  lock={true}  placeholder='Дата рождения'>\r\n    <div  onClick={()=>setcalendar((prev:any)=>!prev)} className=\"Registration__calendar-icon\">\r\n                <img ref={calendarIcon} src={require(\"../../../images/user/calendar.png\")} alt=\"\"/>\r\n    </div>\r\n                <div ref={calendarRef} className={calendar ? \"Registration__calendar active\" : \"Registration__calendar\"}>\r\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                       <DateCalendar   value={dayjs(data)}     onChange={(newValue:any) => dispatch(setData(newValue.toString()))} />\r\n                </LocalizationProvider>\r\n                </div>\r\n                \r\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                <DateField\r\n                     label=\"Controlled field\"\r\n                     value={dayjs(data)}\r\n                     onChange={(newValue:any) => dispatch(setData(newValue.toString()))}\r\n                />\r\n                 </LocalizationProvider>\r\n    </Input>\r\n    <Input value={password} change={(e:string)=>dispatch(changePassword(e))} inputClass={validationPassword ?'registration' : 'registration act'}  placeholder='Пароль'/>\r\n    <Input value={tell} change={(e:string)=>dispatch(setTell(e)) } inputClass='registration'  placeholder='Мобильный *'/>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default BodyRegistration","\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { changeUser, registration } from \"../../https/userApi\";\r\nimport { EMAIL_REGEXP, PASSWORD_REGEX } from \"../../utils/config\";\r\nimport { registrationSlice } from \"../reducers/RegistrationSlice\";\r\nimport { AppDispatch, store } from \"../store\";\r\n\r\n\r\n\r\n\r\n\r\nexport const onSetMail = (e:string)=>async (dispatch:AppDispatch) => {\r\n  const {setMail,setValidationEmail} = registrationSlice.actions\r\n  dispatch(setMail(e))\r\n  \r\n  if (!EMAIL_REGEXP.test(e) && e !=='' ) {\r\n      dispatch(setValidationEmail(false))\r\n     \r\n    }else{\r\n      dispatch(setValidationEmail(true))\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const changePassword = (password:string)=>async (dispatch:AppDispatch) => {\r\n  const {setPassword,setValidationPassword} = registrationSlice.actions\r\n  dispatch( setPassword(password))\r\n  \r\n\r\n  if (!PASSWORD_REGEX.test(password) && password !=='' ) {\r\n      dispatch(setValidationPassword(false))\r\n  }else{\r\n      dispatch(setValidationPassword(true))\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const onRegistration= ()=>async (dispatch:AppDispatch) => {\r\n  const {setLoader,setSuccessfullReg} = registrationSlice.actions\r\n  const currentState = store.getState();\r\n  const {secondName,name,mail,data,password,tell,validationEmail,validationPassword} = currentState.reducer.registration\r\n\r\ntry {\r\n  if (validationEmail && validationPassword && mail !=='' && password !=='') {\r\n    dispatch(setLoader(true))\r\n    \r\n    registration({mail,password}).then(response=>{\r\n        const user = jwtDecode<any>(response.refreshToken)\r\n        changeUser({id:user.id,name,serName:secondName,birthDate:data,tell}).then(data=>{\r\n            dispatch(setSuccessfullReg(true))\r\n            console.log(data,'1111');\r\n        \r\n            setTimeout(() => {\r\n                dispatch(setSuccessfullReg(false))\r\n            }, 3000);\r\n        })\r\n    \r\n    }).finally(()=>{\r\n        dispatch(setLoader(false))\r\n    })\r\n}else{\r\n    alert('ошибка при регистрации')\r\n}\r\n} catch (error) {\r\n  console.log(error);\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Button from '../../UI/button/Button'\r\nimport { onRegistration } from '../../../store2/actions/RegistrationActions'\r\nimport { useAppDispatch } from '../../../hooks/reduxHooks'\r\n\r\nconst SubmitRegistration = () => {\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n  return (\r\n    <div className=\"Registration__submit\">\r\n    <Button onClick={()=>dispatch(onRegistration())} className='registration g'>Зарегистрироваться</Button>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default SubmitRegistration","import React from 'react'\r\nimport BodyRegistration from './bodyRegistration/BodyRegistration'\r\nimport SubmitRegistration from './submitRegistration/SubmitRegistration'\r\nimport Navigation from '../UI/navigation/Navigation'\r\nimport Loader from '../UI/loader/Loader'\r\nimport { useAppSelector } from '../../hooks/reduxHooks'\r\nimport './registration.scss'\r\n\r\nconst Mainregistration = () => {\r\n    const {loader,successfullReg} = useAppSelector(state=>state.reducer.registration)\r\n\r\n    \r\n  return (\r\n    <div className=\"Registration\">\r\n   \r\n    <div className=\"Registration__container\">\r\n        <Navigation navigationClass='registration'>Главная / Регистрация</Navigation>\r\n        <div className=\"Registration__title\">Регистрация</div>\r\n        <BodyRegistration/>\r\n        <SubmitRegistration/>\r\n    </div>\r\n    {loader &&<div className=\"Registration__loader\"><Loader/></div>}\r\n    {successfullReg &&<div className=\"Registration__successfullReg\">Успешная регистрация</div>}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Mainregistration","import Layout from '../app/Layout'\r\nimport Mainregistration from '../components/registration/Mainregistration'\r\n\r\n\r\nconst Registration = () => {\r\n  return (\r\n    <Layout>\r\n        <Mainregistration/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Registration"],"names":["_ref","children","navigationClass","_jsx","className","concat","BodyRegistration","calendarIcon","useRef","calendarRef","calendar","setcalendar","useState","secondName","name","mail","data","password","tell","validationEmail","validationPassword","useAppSelector","state","reducer","registration","setData","setName","setSecondName","setTell","registrationSlice","actions","dispatch","useAppDispatch","useEffect","_document$querySelect","document","addEventListener","onCalendar","querySelector","removeEventListener","e","_calendarRef$current","target","current","contains","_jsxs","Input","value","change","inputClass","placeholder","async","setMail","setValidationEmail","EMAIL_REGEXP","test","onSetMail","dayjs","toString","lock","onClick","prev","ref","src","require","alt","LocalizationProvider","dateAdapter","AdapterDayjs","DateCalendar","onChange","newValue","DateField","label","setPassword","setValidationPassword","PASSWORD_REGEX","changePassword","SubmitRegistration","Button","setLoader","setSuccessfullReg","currentState","store","getState","then","response","user","jwtDecode","refreshToken","changeUser","id","serName","birthDate","console","log","setTimeout","finally","alert","error","Mainregistration","loader","successfullReg","Navigation","Loader","Registration","Layout"],"sourceRoot":""}