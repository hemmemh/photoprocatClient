{"version":3,"file":"static/js/357.8335cbc1.chunk.js","mappings":"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","sources":["components/UI/myTextArea/MyTextArea.tsx","components/UI/navigation/Navigation.tsx","components/UI/accordionOne/AccordionOne.tsx","components/news/bodyNews/elementNews/ElementNews.tsx","https/newsApi.ts","components/news/bodyNews/BodyNews.tsx","hooks/useNews.tsx","components/news/raitingModal/NewsModal.tsx","hooks/useComment.tsx","components/news/commentModal/CommentModal.tsx","components/news/MainNews.tsx","pages/News.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport './myTextArea.scss'\r\ntype MyTextArea = {\r\n    value:string\r\n    setValue:(e:string)=>void\r\n    placeholder?:string | undefined\r\n    className?:string\r\n}\r\nconst MyTextArea = ({value,setValue,placeholder='',className=''}:MyTextArea) => {\r\nconst textAreaRef = useRef<HTMLTextAreaElement>(null)\r\nconst [focus, setFocus] = useState(false)\r\n    const onFocus = ()=>{\r\n        setFocus(true)\r\n      \r\n    }\r\n\r\n\r\n    const onBlur = ()=>{\r\n         setFocus(false)\r\n    }\r\n\r\n    \r\n   const change = (e:any)=>{\r\n    textAreaRef.current && (textAreaRef.current.style.height = \"auto\")\r\n    textAreaRef.current && (textAreaRef.current.style.height = `${e.target.scrollHeight}px`)\r\n    setValue(e.target.value)\r\n   }\r\n\r\n\r\n  return (\r\n    <textarea \r\n        ref={textAreaRef}  \r\n        rows={1} \r\n        onFocus={onFocus} \r\n        onBlur={onBlur} \r\n        className={`MyTextArea ${className} ${focus ? 'active' : ''}`} \r\n        value={value}  \r\n        onChange={change} \r\n        placeholder={placeholder}>\r\n    </textarea>\r\n  )\r\n}\r\n\r\nexport default MyTextArea","import React, { Children, FC, ReactNode } from 'react'\r\nimport './navigation.scss'\r\ninterface FooterProps{  \r\n    name?:string,\r\n    children?:any\r\n    changeName?:boolean\r\n    lock?:boolean\r\n    navigationClass?:string\r\n  }\r\nconst Navigation:FC<FooterProps> = ({children,navigationClass='origin'}) => {\r\n  return (\r\n    <div className={`Navigation ${navigationClass}`}>{children}</div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Navigation","import React, {useCallback, useEffect, useMemo, useRef, useState,FC,ReactNode,cloneElement,ReactElement } from 'react'\r\nimport './accordionOne.scss'\r\n\r\ninterface FooterProps{  \r\n  breakpoint?:number,\r\n  children?:any,\r\n  oneOpen?:boolean,\r\n  setVisibleAccordion?:(a:boolean)=>void,\r\n  accordionClass?:string\r\n}\r\n\r\n\r\n\r\n\r\nconst AccordionOne: FC<FooterProps> = ({breakpoint=8000,children,oneOpen=false,setVisibleAccordion,accordionClass='origin'}) => {\r\n   const [active, setactive] = useState(false)\r\n   const [visible, setVisible] = useState<number|null>(null)\r\n   const itemRef = useRef<any>()\r\n   const childRef = useRef<any>()\r\n   const itemWidthRef = useRef()\r\n   const footerItems = useRef<any>([])\r\n  const accordRef = useRef<any>()\r\n//при нажатии на один аккордион другой закрывается\r\n\r\n\r\n//закрытие или открытие всех аккордионов при брейкпоинте\r\n    const ff2 = useCallback(\r\n      () => {\r\n        const clientWidth = window.innerWidth\r\n      if (clientWidth <= breakpoint) {\r\n       \r\n        \r\n        setactive(false)\r\n      }else{\r\n        setactive(true)\r\n      }\r\n      \r\n      },\r\n      [],\r\n    )\r\n    \r\n//определяет открыты или закрыты все аккордионы в начале\r\n    useEffect(() => {\r\n      const clientWidth = window.innerWidth\r\n      \r\n      if (clientWidth <= breakpoint) {\r\n        setactive(false)\r\n      }else{\r\n        setactive(true)\r\n      }\r\n\r\n\r\n      window.addEventListener('resize',ff2)\r\n      return () => {\r\n        window.removeEventListener('resize',ff2)\r\n      }\r\n\r\n\r\n     \r\n    }, [])\r\n\r\n   const [counter, setcounter] = useState<any>(null)\r\n   const [counter2, setcounter2] = useState<any>(null)\r\n  \r\n    useEffect(() => {\r\n      itemRef.current.style.height = '0px'\r\n      window.addEventListener('resize',gg)\r\n      return () => {\r\n        window.removeEventListener('resize',gg)\r\n      }\r\n  \r\n    }, [])\r\n  \r\n    const gg = ()=>{\r\n \r\n      \r\n  \r\n    }\r\n    \r\n    useEffect(() => {\r\n      //setVisibleAccordion(false)\r\n      if (active) {\r\n\r\n\r\n       //itemRef.current.style.boxSizing = 'content-box'\r\n       itemRef.current.style.height =`${itemRef.current.scrollHeight}px`\r\n       setTimeout(() => {\r\n        itemRef.current.style.height= 'auto'\r\n       }, 300);\r\n      }else{\r\n    \r\n        console.log('777777',active);\r\n        \r\n        itemRef.current.style.height =`${itemRef.current.scrollHeight}px`\r\n        setTimeout(() => {\r\n          itemRef.current.style.height = '0px'\r\n        }, 5);\r\n\r\n      }\r\n  \r\n       \r\n     }, [active])\r\n\r\n\r\n     const changeOnClick = ()=>{   \r\n    \r\n      //itemRef.current.style.height= 'auto'\r\n      //itemRef.current.style.boxSizing = 'border-box'\r\n      //itemRef.current.style.height =`${itemRef.current.scrollHeight}px`\r\n     }\r\nconst cc = ()=>{\r\n  if (active) {\r\n    \r\n  }\r\n  \r\n}\r\n  return (\r\n    <div ref={accordRef} className={`AccordionOne ${accordionClass}`}>\r\n      <div className='AccordionOne__bodyCover' onTransitionEnd={cc}>\r\n       <div onClick={()=>setactive((prev)=>!prev)}  className={active ? \"AccordionOne__button  active _icon-arrow-next active\" : \"AccordionOne__button _icon-arrow-next\"}>{children[0]}</div>\r\n       <div onClick={()=>changeOnClick()} ref={itemRef} className=\"AccordionOne__body\"> \r\n       <div className=\"AccordionOne__bodytwo\">\r\n       {children[1]}\r\n       </div>\r\n       </div>\r\n      </div>\r\n      </div>\r\n  )\r\n  }\r\n\r\nexport default AccordionOne","import React,{useState,useEffect} from 'react'\r\nimport { getAllNews } from '../../../../https/newsApi'\r\nimport { newsSlice } from '../../../../store2/reducers/NewsSlice'\r\nimport Button from '../../../UI/button/Button'\r\nimport { API_URL } from '../../../../utils/config'\r\nimport AccordionOne from '../../../UI/accordionOne/AccordionOne'\r\nimport Loader from '../../../UI/loader/Loader'\r\nimport { useAppDispatch, useAppSelector } from '../../../../hooks/reduxHooks'\r\nimport './elementNews.scss'\r\nimport format from 'date-fns/format'\r\nimport { ru } from 'date-fns/locale'\r\nimport Button2 from '../../../UI/button2/Button2'\r\n\r\n\r\nconst ElementNews = () => {\r\n    const [loader, setloader] = useState<boolean>(false)\r\n    const {setNewsId,setModalCooment,setNews} = newsSlice.actions\r\n    const dispatch = useAppDispatch()\r\n    const {news} = useAppSelector(state=>state.reducer.news)\r\n    \r\n    useEffect(() => {\r\n        getAllNews().then(data=>{\r\n            dispatch(setNews(data))\r\n            setloader(true)\r\n        })\r\n    }, [])\r\n\r\n    const modalCommentId=(id:any)=>{\r\n        dispatch(setModalCooment(true))\r\n        dispatch(setNewsId(id))\r\n        \r\n     }\r\n\r\n\r\n  return (\r\n    <div className=\"News__main main-news\">\r\n\r\n        {loader ? news.map((el:any)=>\r\n        {\r\n            const date = format(+el.date, 'd MMMM yyyy', { locale:ru })\r\n            return(    \r\n            <div key={el.title} className=\"main-news__new new-main\">\r\n            <div className=\"new-main__image\">\r\n            <img src={`${API_URL}/news/${el.image}`} alt=\"\"/>\r\n            </div>\r\n            <div className=\"new-main__date\">{date}</div>\r\n            <div className=\"new-main__name\">{el.title}</div>\r\n            <div className=\"new-main__text\">{el.text}</div>\r\n            <div className=\"new-main__button\">\r\n            <Button2 onClick={()=>modalCommentId(el._id)}  className='buttonCart'>Добавить комментарий </Button2>\r\n            </div>\r\n            \r\n            <div className=\"new-main__cooments comments-main\">\r\n            <AccordionOne accordionClass='news'>\r\n                <div className=\"comments-main__value\">{el.comments.length} комментариев</div>\r\n                <div className=\"comments-main__body\">\r\n                 {el.comments.map((com:any)=>\r\n                   <div key={com._id} className=\"comments-main__item\">\r\n                   <div className=\"comments-main__name\">{com.name} {com.sername}</div>\r\n                   <div className=\"comments-main__text\">{com.text}</div>\r\n               </div>\r\n               )}\r\n                  \r\n                \r\n                </div>\r\n                </AccordionOne>\r\n                \r\n                \r\n            </div>\r\n            \r\n        </div>)\r\n        }\r\n       \r\n       )\r\n    :\r\n    <Loader/>}\r\n     \r\n  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ElementNews","import axios from \"axios\"\r\nimport { $authHost, $host } from \".\"\r\nimport { API_URL } from \"../utils/config\"\r\n\r\nexport const addNews= async(info:any)=>{\r\n    const {data} = await $host.post('news',info)\r\n    return data\r\n}\r\nexport const getAllNews= async()=>{\r\n    const {data} = await $host.post('news/getAll')\r\n    return data\r\n}\r\n\r\nexport const addComment= async(info:any)=>{\r\n    const {data} = await $host.post('news/addComment',info)\r\n    return data\r\n}\r\n","import React from 'react'\r\nimport MainNews from '../MainNews'\r\nimport RightNews from './rightNews/RightNews'\r\nimport ElementNews from './elementNews/ElementNews'\r\n\r\nconst BodyNews = () => {\r\n  return (\r\n    <div className=\"News__body\">\r\n        <ElementNews/>\r\n  \r\n</div>\r\n  )\r\n}\r\n\r\nexport default BodyNews","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { addNews } from '../https/newsApi'\r\nimport { HOME_ROUTE } from '../app/config/routs'\r\nimport { useAppDispatch, useAppSelector } from './reduxHooks'\r\nimport { newsSlice } from '../store2/reducers/NewsSlice'\r\n\r\nconst useNews = () => {\r\n\r\n    const [fileImage, setFileImage] = useState<any>(null)\r\n    const [fileName, setFileName] = useState<string | null>('')\r\n    const [fileDiv, setFileDiv] = useState<boolean>(false)\r\n    const [file, setfile] = useState<any>(null)\r\n    const [text, settext] = useState<string>('')\r\n    const [title, settitle] = useState<string>('')\r\n    const {modalCooment,news} = useAppSelector(state=>state.reducer.news)\r\n    const {setNews,setModalNews} = newsSlice.actions\r\n    const dispatch = useAppDispatch()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const fileload = (e:any)=>{\r\n        let reader = new FileReader();\r\n       \r\n        reader.readAsDataURL(e.target.files[0]);\r\n        setfile(e.target.files[0])\r\n        reader.onloadend = ()=>{\r\n            setFileImage(reader.result)\r\n            setFileName(e.target.files[0].name)\r\n            setFileDiv(true)\r\n               \r\n        }\r\n\r\n    }\r\n\r\n\r\n    const clearFile = ()=>{\r\n        console.log('6666');\r\n        setFileDiv(false)\r\n        setFileImage(null)\r\n        setFileName(null)\r\n        setfile(null)\r\n\r\n\r\n     }\r\n\r\n\r\n     const sendNews = ()=>{\r\n        if (title !== '' && text !== '' && file!== null) {\r\n            const formaData = new FormData()\r\n            formaData.append('title',title)\r\n            formaData.append('text',text)\r\n            formaData.append('image',file)\r\n           addNews(formaData).then(data=>{\r\n            settitle('')\r\n            settext('')\r\n            setfile(null)\r\n            setFileImage(null)\r\n            setFileDiv(false)\r\n            dispatch(setNews([...news,data]))\r\n            dispatch(setModalNews(false))\r\n           })\r\n        }else{\r\n            alert('недостаточно данных')\r\n        }\r\n      \r\n        \r\n    }\r\n\r\n\r\n  return {fileload,clearFile,sendNews,fileImage,fileName,fileDiv,text,title,settext,settitle}\r\n}\r\n\r\nexport default useNews","import React, { useRef, useState } from 'react'\r\nimport { Modal } from '../../UI/modal/Modal'\r\nimport Input from '../../UI/input/Input'\r\nimport Button from '../../UI/button/Button'\r\nimport { newsSlice } from '../../../store2/reducers/NewsSlice'\r\nimport useNews from '../../../hooks/useNews'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport Button2 from '../../UI/button2/Button2'\r\nimport MyTextArea from '../../UI/myTextArea/MyTextArea'\r\nimport '../news.scss'\r\nconst RaitingModal = () => {\r\n\r\n    const {modalNews} = useAppSelector(state=>state.reducer.news)\r\n    const {setModalNews} = newsSlice.actions\r\n    const dispatch = useAppDispatch()\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n    const {title,text,fileload,fileName,fileDiv,fileImage,clearFile,sendNews,settext,settitle} = useNews()\r\n\r\n\r\n    const activateInput=()=>{\r\n        inputRef.current?.click()\r\n     }\r\n\r\n  return (\r\n    <Modal active={modalNews} setActive={(e:any)=>dispatch(setModalNews(e))} modalClass='raiting'>\r\n        <div className=\"RaitingModal\">\r\n            <div className=\"RaitingModal__top\">\r\n                <Input value={title} change={settitle} inputClass='registration gv' placeholder='Заголовок   *'/>\r\n            </div>\r\n            <div className=\"RaitingModal__text\">\r\n                <MyTextArea value={text} setValue={(e)=>settext(e)} placeholder='текст' className='RaitingModal__textarea'/>\r\n            </div>\r\n            <div className=\"RaitingModal__images\">\r\n                <div  className=\"RaitingModal__label\">\r\n                    <input ref={inputRef}  onChange={fileload} type=\"file\" className=\"RaitingModal__file\" />\r\n                <div  className=\"RaitingModal__l\">\r\n                    <Button2 onClick={activateInput}  className='buttonCart'>{fileName ? `${fileName}` : 'Выбрать изображение'} </Button2>\r\n                </div>\r\n                </div>\r\n                <div className={fileDiv ? \"RaitingModal__imageCover active \" :\"RaitingModal__imageCover \"}>     \r\n                <div className=\"RaitingModal__image\">\r\n                <span onClick={clearFile} className='icon-clear _icon-delete'></span>\r\n                    <img src={fileImage} alt=\"\"/>\r\n                </div>              \r\n                </div>    \r\n            </div>\r\n            <div className=\"RaitingModal__button\">\r\n                <Button2  onClick={sendNews} className='buttonCart'>Отправить</Button2>\r\n            </div>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default RaitingModal","import React, { useState } from 'react'\r\nimport { addComment } from '../https/newsApi'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { HOME_ROUTE } from '../app/config/routs'\r\nimport { useAppDispatch, useAppSelector } from './reduxHooks'\r\nimport { newsSlice } from '../store2/reducers/NewsSlice'\r\n\r\nconst useComment = () => {\r\n    const {user} = useAppSelector(state=>state.reducer.catalog)\r\n    const {newsId,news} = useAppSelector(state=>state.reducer.news)\r\n    const {setNews,setModalCooment} = newsSlice.actions\r\n    const [name, setname] = useState<string>(user.name)\r\n    const [sername, setsername] = useState<string>(user.sername)\r\n    const [textComment, settextComment] = useState<string>('')\r\n    const navigate = useNavigate()\r\n    const dispatch = useAppDispatch()\r\n\r\n    const addCommentToNews = ()=>{\r\n        if (name !== '' && sername !== ''&& textComment !== '' ) {\r\n       addComment({name,sername,text:textComment,news:newsId}).then(data=>{\r\n        console.log(data);\r\n        let thisNews = [...news]\r\n        console.log(thisNews);\r\n        \r\n        thisNews = thisNews.map((el:any)=>{\r\n          if (el._id === newsId) {\r\n            const el2 = JSON.parse(JSON.stringify(el))\r\n            console.log(el.comments);\r\n            el2.comments.push(data)\r\n            return el2\r\n          }\r\n          return el\r\n        })\r\n        dispatch(setNews(thisNews))\r\n        dispatch(setModalCooment(false))\r\n       })\r\n     }else{\r\n        alert('недостаточно данных')\r\n    }\r\n}\r\n\r\n\r\n  return {setname,setsername,settextComment,addCommentToNews,sername,textComment,name}\r\n}\r\n\r\nexport default useComment","import React, { useState } from 'react'\r\nimport Input from '../../UI/input/Input'\r\nimport { Modal } from '../../UI/modal/Modal'\r\nimport Button from '../../UI/button/Button'\r\nimport useComment from '../../../hooks/useComment'\r\nimport { newsSlice } from '../../../store2/reducers/NewsSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks/reduxHooks'\r\nimport Button2 from '../../UI/button2/Button2'\r\n\r\nconst CommentModal = () => {\r\n\r\n        const {modalCooment} = useAppSelector(state=>state.reducer.news)\r\n        const {setModalCooment} = newsSlice.actions\r\n        const dispatch = useAppDispatch()\r\n\r\nconst {addCommentToNews,setname,setsername,settextComment,sername,textComment,name}= useComment()\r\n\r\n\r\n  return (\r\n    <Modal active={modalCooment} setActive={(e:any)=>dispatch(setModalCooment(e))} modalClass='raiting'>\r\n    <div className=\"RaitingModal\">\r\n        <div className=\"RaitingModal__top\">\r\n            <Input value={name} change={setname} inputClass='registration gv' placeholder='Имя  *'/>\r\n            <Input value={sername} change={setsername} inputClass='registration gv' placeholder='Фамилия  *'/>\r\n        </div>\r\n        <div className=\"RaitingModal__text\">\r\n            <textarea value={textComment} onChange={(e)=>settextComment(e.target.value)} placeholder='отзыв' className='RaitingModal__textarea'>{textComment}</textarea>\r\n        </div>\r\n        <div className=\"RaitingModal__button\">\r\n        <Button2  onClick={addCommentToNews} className='buttonCart'>Отправить</Button2>\r\n        </div>\r\n        \r\n    </div>\r\n    \r\n   </Modal>\r\n  )\r\n}\r\n\r\nexport default CommentModal","import BodyNews from './bodyNews/BodyNews'\r\nimport RaitingModal from './raitingModal/NewsModal'\r\nimport CommentModal from './commentModal/CommentModal'\r\nimport Navigation from '../UI/navigation/Navigation'\r\nimport { newsSlice } from '../../store2/reducers/NewsSlice'\r\nimport Button from '../UI/button/Button'\r\nimport { useAppDispatch } from '../../hooks/reduxHooks'\r\nimport './news.scss'\r\nimport Button2 from '../UI/button2/Button2'\r\nconst MainNews = () => {\r\n    \r\n    const {setModalNews} = newsSlice.actions\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n  return (\r\n    <div className=\"News\">\r\n        <div className=\"News__container\">\r\n            <Navigation navigationClass='news'>Главная / Новости компании</Navigation>\r\n            <div className=\"News__title\"><span>Новости</span> Компании</div>\r\n            <div className=\"News__button\"><Button2 onClick={()=>dispatch(setModalNews(true))} className='buttonCart'>добавить новость</Button2></div>\r\n            <BodyNews/>\r\n        </div>\r\n        <RaitingModal/>\r\n        <CommentModal/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainNews","import Layout from '../app/Layout'\r\nimport MainNews from '../components/news/MainNews'\r\n\r\nconst News = () => {\r\n  return (\r\n    <Layout>\r\n        <MainNews/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default News"],"names":["_ref","value","setValue","placeholder","className","textAreaRef","useRef","focus","setFocus","useState","_jsx","ref","rows","onFocus","onBlur","concat","onChange","e","current","style","height","target","scrollHeight","children","navigationClass","breakpoint","oneOpen","setVisibleAccordion","accordionClass","active","setactive","visible","setVisible","itemRef","accordRef","ff2","useCallback","clientWidth","window","innerWidth","useEffect","addEventListener","removeEventListener","counter","setcounter","counter2","setcounter2","gg","setTimeout","console","log","_jsxs","onTransitionEnd","cc","onClick","prev","ElementNews","loader","setloader","setNewsId","setModalCooment","setNews","newsSlice","actions","dispatch","useAppDispatch","news","useAppSelector","state","reducer","async","data","$host","post","getAllNews","then","map","el","date","format","locale","ru","src","API_URL","image","alt","title","text","Button2","modalCommentId","id","_id","AccordionOne","comments","length","com","name","sername","Loader","BodyNews","useNews","fileImage","setFileImage","fileName","setFileName","fileDiv","setFileDiv","file","setfile","settext","settitle","modalCooment","setModalNews","useNavigate","fileload","reader","FileReader","readAsDataURL","files","onloadend","result","clearFile","sendNews","formaData","FormData","append","info","addNews","alert","RaitingModal","modalNews","inputRef","Modal","setActive","modalClass","Input","change","inputClass","MyTextArea","type","activateInput","_inputRef$current","click","useComment","user","catalog","newsId","setname","setsername","textComment","settextComment","addCommentToNews","addComment","thisNews","el2","JSON","parse","stringify","push","CommentModal","MainNews","Navigation","News","Layout"],"sourceRoot":""}